<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>三生石</title>
  
  <subtitle>记录生活</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-08-07T12:29:57.937Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>贾兴磊</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在SpringBoot中使用Thymeleaf模板引擎</title>
    <link href="http://example.com/2021/08/12/Thymeleaf/"/>
    <id>http://example.com/2021/08/12/Thymeleaf/</id>
    <published>2021-08-11T18:03:01.000Z</published>
    <updated>2021-08-07T12:29:57.937Z</updated>
    
    <content type="html"><![CDATA[<h2 id="在SpringBoot中使用Thymeleaf模板引擎"><a href="#在SpringBoot中使用Thymeleaf模板引擎" class="headerlink" title="在SpringBoot中使用Thymeleaf模板引擎"></a>在SpringBoot中使用Thymeleaf模板引擎</h2><p> Springboot默认是不支持JSP的，默认使用thymeleaf模板引擎。 </p><p> Thymeleaf 官网：<a href="https://www.thymeleaf.org/">https://www.thymeleaf.org/</a> </p><img src="https://tvax3.sinaimg.cn/large/007aXOcdly1gt8cxyjgs4j30m80ah3yo.jpg"><h3 id="1、引入pom依赖"><a href="#1、引入pom依赖" class="headerlink" title="1、引入pom依赖"></a>1、引入pom依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2配置文件application-properties中配置"><a href="#2配置文件application-properties中配置" class="headerlink" title="2配置文件application.properties中配置"></a>2配置文件application.properties中配置</h3><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.thymeleaf.cache</span>=<span class="string">false</span></span><br><span class="line"><span class="meta">spring.thymeleaf.prefix</span>=<span class="string">classpath:/templates/</span></span><br><span class="line"><span class="meta">spring.thymeleaf.suffix</span>=<span class="string">.html</span></span><br><span class="line"><span class="meta">spring.thymeleaf.encoding</span>=<span class="string">UTF-8</span></span><br><span class="line"><span class="meta">spring.thymeleaf.content-type</span>=<span class="string">text/html</span></span><br><span class="line"><span class="meta">spring.thymeleaf.mode</span>=<span class="string">HTML5</span></span><br></pre></td></tr></table></figure><p><strong>建议使用application.yaml</strong></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">thymeleaf:</span></span><br><span class="line">    <span class="attr">cache:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">encoding:</span> <span class="string">UTF-8</span></span><br><span class="line">    <span class="attr">mode:</span> <span class="string">HTML5</span></span><br><span class="line">    <span class="attr">prefix:</span> <span class="string">classpath:/templates/</span></span><br><span class="line">    <span class="attr">suffix:</span> <span class="string">.html</span></span><br></pre></td></tr></table></figure><h3 id="3在resources-templates新建文件"><a href="#3在resources-templates新建文件" class="headerlink" title="3在resources/templates新建文件"></a>3在resources/templates新建文件</h3><p>在resources/templates/这个文件目录下面新建HTML文件时，头文件要加上</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4th属性"><a href="#4th属性" class="headerlink" title="4th属性"></a>4th属性</h3><ol><li><strong>th:text</strong> ：设置当前元素的文本内容，相同功能的还有<strong>th:utext</strong>，两者的区别在于前者不会转义html标签，后者会。优先级不高：order=7</li><li><strong>th:value</strong>：设置当前元素的value值，类似修改指定属性的还有<strong>th:src</strong>，<strong>th:href</strong>。优先级不高：order=6</li><li><strong>th:each</strong>：遍历循环元素，和th:text或th:value一起使用。注意该属性修饰的标签位置，优先级很高：order=2</li><li><strong>th:if</strong>：条件判断，类似的还有<strong>th:unless</strong>，<strong>th:switch</strong>，<strong>th:case</strong>。优先级较高：order=3</li><li><strong>th:insert</strong>：代码块引入，类似的还有<strong>th:replace</strong>，<strong>th:include</strong>，三者的区别较大，若使用不恰当会破坏html结构，常用于公共代码块提取的场景。优先级最高：order=1</li><li><strong>th:fragment</strong>：定义代码块，方便被th:insert引用。优先级最低：order=8</li><li><strong>th:object</strong>：声明变量，一般和*{}一起配合使用，达到偷懒的效果。优先级一般：order=4</li><li><strong>th:attr</strong>：修改任意属性，实际开发中用的较少，因为有丰富的其他th属性帮忙，类似的还有th:attrappend，th:attrprepend。优先级一般：order=5</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;在SpringBoot中使用Thymeleaf模板引擎&quot;&gt;&lt;a href=&quot;#在SpringBoot中使用Thymeleaf模板引擎&quot; class=&quot;headerlink&quot; title=&quot;在SpringBoot中使用Thymeleaf模板引擎&quot;&gt;&lt;/a&gt;在Spri</summary>
      
    
    
    
    <category term="Thymeleaf" scheme="http://example.com/categories/Thymeleaf/"/>
    
    
    <category term="Thymeleaf" scheme="http://example.com/tags/Thymeleaf/"/>
    
    <category term="StringBoot" scheme="http://example.com/tags/StringBoot/"/>
    
    <category term="语法" scheme="http://example.com/tags/%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Redis</title>
    <link href="http://example.com/2021/08/03/redis/"/>
    <id>http://example.com/2021/08/03/redis/</id>
    <published>2021-08-02T18:16:20.000Z</published>
    <updated>2021-08-03T09:38:29.139Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Redis命令"><a href="#Redis命令" class="headerlink" title="Redis命令"></a>Redis命令</h1><hr><ol><li>ping用来检查redis服务是否正常，如果返回pong表示redis服务正常</li><li>redis-cli</li><li>keys * 查看所有的键</li><li>get keyname 通过key名来获取数据</li></ol><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><h3 id="string"><a href="#string" class="headerlink" title="string"></a>string</h3><ul><li>set key value  设置redis键值对，key表示键名，value表示键值对应的值</li><li>del key [key…]  删除指定的键</li><li>setex key second value 设置带过期时间的key以秒为单位。</li><li>ttl key  用来检查指定key的剩余时间 -1表示永不过期， -2表示不存在或者已经过期。</li></ul><h3 id="hash哈希"><a href="#hash哈希" class="headerlink" title="hash哈希"></a>hash哈希</h3><ul><li>hmset key 字段名 值 [字段名 值….] key 下面可以管理一组键值对数据</li><li>hget key 字段 获取key下面指定的属性</li><li>hdel key 字段名 删除指定key下面的字段名</li></ul><h3 id="List列表"><a href="#List列表" class="headerlink" title="List列表"></a>List列表</h3><ul><li>可以存储一组有序不唯一的数据</li><li>lpush key element……   向列表中push多个数据，先push的在最后</li><li>lrange key start stop  查找指定区间内的元素</li><li>lindex key index 查找指定下标的元素</li></ul><h3 id="set集合"><a href="#set集合" class="headerlink" title="set集合"></a>set集合</h3><ul><li>存储一组无序唯一的数据</li><li>sadd key element[elements…..]   返回受影响的行数</li><li>SMEMBERS key 查看集合中的数据</li></ul><h3 id="zset有序的set集合"><a href="#zset有序的set集合" class="headerlink" title="zset有序的set集合"></a>zset有序的set集合</h3><ul><li>zadd key 分数 成员[分数 成员…] key是当前集合的名字 分数为double类型的，成员不允许重复 redis会根据分数的大小来对成员进行排序，最小的在最前【分数允许重复】</li><li>Zrange key start stop 查找指定区间内的集合成员</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Redis命令&quot;&gt;&lt;a href=&quot;#Redis命令&quot; class=&quot;headerlink&quot; title=&quot;Redis命令&quot;&gt;&lt;/a&gt;Redis命令&lt;/h1&gt;&lt;hr&gt;

&lt;ol&gt;
&lt;li&gt;ping用来检查redis服务是否正常，如果返回pong表示redis服务正</summary>
      
    
    
    
    <category term="redis" scheme="http://example.com/categories/redis/"/>
    
    
    <category term="数据库" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="redis" scheme="http://example.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>SSM快速搭建</title>
    <link href="http://example.com/2021/07/28/ssm/"/>
    <id>http://example.com/2021/07/28/ssm/</id>
    <published>2021-07-28T03:16:20.000Z</published>
    <updated>2021-07-28T03:06:33.556Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SSM快速搭建"><a href="#SSM快速搭建" class="headerlink" title="SSM快速搭建"></a>SSM快速搭建</h1><p>1.SSM组成部分 Spring + SpringMVC + Mybatis</p><p>2.本教程基于idea和maven来实现ssm的搭建工作</p><h2 id="1-开始："><a href="#1-开始：" class="headerlink" title="1.开始："></a>1.开始：</h2><p>1.使用idea创建一个maven web项目。<strong>注意：一定要选取自己已经配置到的maven环境【带阿里云的】</strong></p><p>2.检查项目结构是否正常，在控制台是否出现build success 字样，如果没有是为创建失败</p><p>3.找到项目的pom.xml (项目依赖管理文件)，在<properties>标签里加入&lt;spring.version&gt;4.0.6.RELEASE&lt;/spring.version&gt;，并写入以下代码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-beanutils<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-beanutils<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-lang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- c3p0 数据库连接池 start --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mchange<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- c3p0 数据库连接池 end --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- jsp-servlet支持 start --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp.jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.glassfish.web<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl-impl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp.jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>taglibs<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>standard<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- jsp-servlet支持 end --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 标签库 start --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.taglibs<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>taglibs-standard-spec<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.taglibs<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>taglibs-standard-impl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 标签库 end --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- apache的commons系列包 start --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-collections<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-collections<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- apache的commons系列包 end --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- apache 工具包 start --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.xmlbeans<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>xmlbeans<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- apache 工具包 end --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- spring start --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>aopalliance<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aopalliance<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-expression<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-websocket<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc-portlet<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-oxm<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-orm<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-messaging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jms<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-instrument-tomcat<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-instrument<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context-support<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-beans<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- spring start --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- mysql --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.46<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- mybatis start --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- mybatis end --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--日志管理 start--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--日志管理 end--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/javax.mail/mail --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--getter setter 注解 start--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.16.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--getter setter 注解 end--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.jackson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-core-asl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.sf.ezmorph<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ezmorph<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--      todo 数据校验--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hibernate.validator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hibernate-validator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.0.13.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jboss.logging<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jboss-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.2.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.validation<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>validation-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.1.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--json start--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.15<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.jackson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-mapper-asl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jackson.verson&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jackson.verson&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--json end--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    分页page--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>4.找到pom.xml文件中的properties标签，并填入如下代码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>4.0.6.RELEASE<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jackson.verson</span>&gt;</span>2.8.7<span class="tag">&lt;/<span class="name">jackson.verson</span>&gt;</span></span><br></pre></td></tr></table></figure><p>5.选中main文件夹 创建Java源文件和resources配置文件夹并将其对应成对应的类型</p><p>6.在Java源文件夹中创建如下包：</p><p><img src="https://tva4.sinaimg.cn/large/007aXOcdly1gswfdag7zwj305k063glx.jpg"></p><ul><li><p>cimmin(存放项目中所有的公共类，比如同意返回对象)</p></li><li><p>dao（存放dao层接口，起名方式为‘Mapper.java’）</p></li><li><p>service(存放项目中的所有业务逻辑接口)</p></li><li><p>controller(控制层，负责调用service层来实现业务逻辑的调用)</p></li><li><p>util(工具类，比如分页类，日期转换之类的工具)</p></li><li><p>entity(实体类，主要负责MySQL中对应的字段和Java的属性一一对应)</p></li><li><p>vo（view-object：视图对象，当页面中所需要的字段和实体类冲突时，可使用vo来解决）</p></li></ul><p>7.在resource文件夹中创建如下内容</p><p><img src="https://tva2.sinaimg.cn/large/007aXOcdly1gswg3ksampj306y03bwex.jpg"></p><ul><li>mappers(文件夹：存放所有的mapper的映射文件，这里的映射文件要与dao层接口一一对应)</li><li>applicationContext.xml (spring - mybatis配置文件，主要负责全项目的注解扫描，对象创建等服务)</li><li>applicationContext-mvc.xml (Springmvc 方向的配置文件，只要负责文件上传，视图解析)</li><li>db.properties (数据库信息配置文件)</li><li>logback.xml(日志记录配置文件)</li></ul><p>8.编辑web.xml(全局最大的配置文件，在项目启动时候会优先加载此配置文件)</p><p>​    1.跟换web.xml的头标签，因为2.3不支持el表达式</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">version</span>=<span class="string">&quot;3.0&quot;</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://java.sun.com/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> </span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://java.sun.com/xml/ns/javaee</span></span></span><br><span class="line"><span class="tag"><span class="string">  http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd&quot;</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​    2写入一下代码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Archetype Created Web Application<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--监听上下文启动  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath*:applicationContext.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 配置springmvc 相关内容--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath*:applicationContext-mvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 配置过滤器，如果页面在传递数据时候乱码，配置这个--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 这里一定要写/*过滤器的所有请求 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>9配置applicationContext.xml内容</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--        TODO 开启注解扫描--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;cn.kgc&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--引入配置文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;classpath*:db.properties&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    配置数据源--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.mchange.v2.c3p0.DriverManagerDataSource&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--配置会话工厂 主要为dao层服务--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sessionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span> &gt;</span></span><br><span class="line"><span class="comment">&lt;!--      todo  配置会话工厂的数据源--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        配置实体类的别名--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;typeAliasesPackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;cn.kgc.ssm.entity&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--      todo  配置mapper映射文件的位置，这里同样采用固定位置来查找配置文件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;mapperLocations&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath*:mapper/*Mapper.xml&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--扫描dao层--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;basePackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;cn.kgc.ssm.dao&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--配置事务管理--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    todo 由于这次例子又没数据库增删改查操作,所以不写声明式事务--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>10配置applicationContext-mvc.xml内容</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    todo 标志控制层--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span> <span class="attr">conversion-service</span>=<span class="string">&quot;conversionService2&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    开启注解扫描--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;cn.kgc&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  配置视图解析器  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/jsp/&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--   todo 配置静态资源--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">&quot;/statics/**&quot;</span> <span class="attr">location</span>=<span class="string">&quot;/statics/&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    todo 全局异常处理--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;bean class=&quot;org.springframework.web.servlet.handler.SimpleMappingExceptionResolver&quot;&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&amp;lt;!&amp;ndash;        配置错误信息的参数名称&amp;ndash;&amp;gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;property name=&quot;exceptionAttribute&quot; value=&quot;exception&quot; /&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&amp;lt;!&amp;ndash;        配置展示错误信息的页面&amp;ndash;&amp;gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;property name=&quot;defaultErrorView&quot; value=&quot;error&quot; /&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;/bean&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    配置date转化--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.context.support.ConversionServiceFactoryBean&quot;</span> <span class="attr">id</span>=<span class="string">&quot;conversionService2&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;converters&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;cn.kgc.ssm.utils.DateConvert&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    文件上传配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.multipart.commons.CommonsMultipartResolver&quot;</span> <span class="attr">id</span>=<span class="string">&quot;multipartResolver&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        设置最大文件上传大小--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxUploadSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;4096000000&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        设置文件编码格式--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;defaultEncoding&quot;</span> <span class="attr">value</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxInMemorySize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;4096&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>至此所有的ssm配置工作完成</p><h2 id="4项目中注解的解释"><a href="#4项目中注解的解释" class="headerlink" title="4项目中注解的解释"></a>4项目中注解的解释</h2><ol><li>@Service 向spring容器中注入当前类为service层，用于service的实现类上</li><li>@Controller 相助当前类为控制层</li><li>@RequestMapping 这个注解比较厉害，可以修饰类也可以修饰方法，他的主要功能只要被标注，就说明可以接收请求和响应</li><li>@Resources 注入其他类，【这里特别容易空指针，请注意扫描内容】</li><li>@ResponseBody 表示当前方法返回的内容不走视图解析器</li><li>@RequestParam 主要用来接收奇纳丹传来的参数，负责当前端参数名称和后端参数名称不对应的情况，如果mvc中的一个参数被修饰了此注解，默认为必传项</li><li>@PathVariable 用户restful风格，从路径中获取参数</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;SSM快速搭建&quot;&gt;&lt;a href=&quot;#SSM快速搭建&quot; class=&quot;headerlink&quot; title=&quot;SSM快速搭建&quot;&gt;&lt;/a&gt;SSM快速搭建&lt;/h1&gt;&lt;p&gt;1.SSM组成部分 Spring + SpringMVC + Mybatis&lt;/p&gt;
&lt;p&gt;2.本教</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    
    <category term="SSM" scheme="http://example.com/tags/SSM/"/>
    
    <category term="搭建" scheme="http://example.com/tags/%E6%90%AD%E5%BB%BA/"/>
    
    <category term="Spring" scheme="http://example.com/tags/Spring/"/>
    
    <category term="Mybatis" scheme="http://example.com/tags/Mybatis/"/>
    
  </entry>
  
  <entry>
    <title>Java分页查询page类</title>
    <link href="http://example.com/2021/07/02/javapage/"/>
    <id>http://example.com/2021/07/02/javapage/</id>
    <published>2021-07-02T06:26:00.000Z</published>
    <updated>2021-07-02T06:55:56.621Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Java分页查询page"><a href="#Java分页查询page" class="headerlink" title="Java分页查询page"></a>Java分页查询page</h2><h3 id="1-创建page实现类和想要分页数据的实现类"><a href="#1-创建page实现类和想要分页数据的实现类" class="headerlink" title="1.创建page实现类和想要分页数据的实现类"></a>1.创建page实现类和想要分页数据的实现类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PageUtil</span> &lt;<span class="title">T</span>&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer pageIndex; <span class="comment">//页码</span></span><br><span class="line">    <span class="keyword">private</span> Integer pageSize; <span class="comment">//页容量</span></span><br><span class="line">    <span class="keyword">private</span> Integer total;   <span class="comment">//总条数</span></span><br><span class="line">    <span class="keyword">private</span> Integer totalPage; <span class="comment">//总页数</span></span><br><span class="line">    <span class="keyword">private</span> Integer beginIndex; <span class="comment">//起始位置</span></span><br><span class="line">    <span class="keyword">private</span> T rows;         <span class="comment">//数据集</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PageUtil</span><span class="params">(Integer pageIndex, Integer pageSize, Integer total)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.pageIndex = pageIndex;</span><br><span class="line">        <span class="keyword">this</span>.pageSize = pageSize;</span><br><span class="line">        <span class="keyword">this</span>.total = total;</span><br><span class="line">        <span class="keyword">this</span>.totalPage = total % pageSize == <span class="number">0</span> ? total / pageSize : total / pageSize +<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">this</span>.beginIndex = (pageIndex -<span class="number">1</span>)*pageSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getPageIndex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pageIndex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPageIndex</span><span class="params">(Integer pageIndex)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.pageIndex = pageIndex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getPageSize</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pageSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPageSize</span><span class="params">(Integer pageSize)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.pageSize = pageSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getTotal</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> total;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTotal</span><span class="params">(Integer total)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.total = total;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getTotalPage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> totalPage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTotalPage</span><span class="params">(Integer totalPage)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.totalPage = totalPage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getBeginIndex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> beginIndex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBeginIndex</span><span class="params">(Integer beginIndex)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.beginIndex = beginIndex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">getRows</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> rows;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRows</span><span class="params">(T rows)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.rows = rows;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>想要分页的数据实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NewsCategory</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Date createDate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;NewsCategory&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, createDate=&quot;</span> + createDate +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getCreateDate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> createDate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCreateDate</span><span class="params">(Date createDate)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.createDate = createDate;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-Dao层"><a href="#2-Dao层" class="headerlink" title="2.Dao层"></a>2.Dao层</h3><p>在Dao添加两个方法，分别是要获取数据的总数和一个分页的查询，也要在接口上添加。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment">     * 获取新闻分类数量</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getTotal</span><span class="params">()</span></span>&#123;</span><br><span class="line">        getConnection();</span><br><span class="line">        String sql = <span class="string">&quot;select count(id) from news_category&quot;</span>;</span><br><span class="line">        Integer total = <span class="keyword">null</span>;</span><br><span class="line">        rs = executeQuery(sql , <span class="keyword">null</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">                total = rs.getInt(<span class="string">&quot;count(id)&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        close();</span><br><span class="line">        <span class="keyword">return</span> total;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/***</span></span><br><span class="line"><span class="comment">     * 分页查询数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> beginIndex    起始位置</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pageSize      页容量</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>              符合条件的数据集</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;NewsCategory&gt; <span class="title">queryNewsPage</span><span class="params">(Integer beginIndex , Integer pageSize)</span></span>&#123;</span><br><span class="line">        getConnection();</span><br><span class="line">        String sql = <span class="string">&quot;select id,name,createDate from news_category limit ?,?&quot;</span>;</span><br><span class="line">        Object[] params = &#123;beginIndex,pageSize&#125;;</span><br><span class="line">        rs = executeQuery(sql,params);</span><br><span class="line">        List&lt;NewsCategory&gt; newsCategories = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">                NewsCategory newsCategory = <span class="keyword">new</span> NewsCategory();</span><br><span class="line">                newsCategory.setId(rs.getLong(<span class="string">&quot;id&quot;</span>));</span><br><span class="line">                newsCategory.setName(rs.getString(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">                newsCategory.setCreateDate(rs.getDate(<span class="string">&quot;createDate&quot;</span>));</span><br><span class="line">                newsCategories.add(newsCategory);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        close();</span><br><span class="line">        <span class="keyword">return</span> newsCategories;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="3-service层"><a href="#3-service层" class="headerlink" title="3.service层"></a>3.service层</h3><p>service层添加一个方法，就是分页功能方法，参数是页码和页容量，接口添加。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> PageUtil&lt;List&lt;NewsCategory&gt;&gt; page(Integer pageIndex, Integer pageSize)&#123;</span><br><span class="line">        pageIndex = pageIndex == <span class="keyword">null</span> ? <span class="number">1</span>:pageIndex;</span><br><span class="line">        pageSize = pageSize == <span class="keyword">null</span> ? <span class="number">5</span> :pageSize;</span><br><span class="line">        <span class="comment">//查找条数</span></span><br><span class="line">        Integer total = newsCategoryDao.getTotal();</span><br><span class="line">        PageUtil&lt;List&lt;NewsCategory&gt;&gt; pageUtil = <span class="keyword">new</span> PageUtil&lt;&gt;(pageIndex,pageSize,total);</span><br><span class="line">        <span class="comment">//开始分页查找</span></span><br><span class="line">        List&lt;NewsCategory&gt; newsCategories = newsCategoryDao.queryNewsPage(pageUtil.getBeginIndex(),pageUtil.getPageSize());</span><br><span class="line">        pageUtil.setRows(newsCategories);</span><br><span class="line">        <span class="keyword">return</span> pageUtil;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="4测试"><a href="#4测试" class="headerlink" title="4测试"></a>4测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        NewsCategoryService newsCategoryService = <span class="keyword">new</span> NewsCategoryServiceImpl();</span><br><span class="line">        PageUtil&lt;List&lt;NewsCategory&gt;&gt; page = newsCategoryService.page(<span class="number">1</span>,<span class="number">3</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;总页数&quot;</span>+page.getTotalPage());</span><br><span class="line">        System.out.println(<span class="string">&quot;当前页数据&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (NewsCategory row : page.getRows())&#123;</span><br><span class="line">            System.out.println(row);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Java分页查询page&quot;&gt;&lt;a href=&quot;#Java分页查询page&quot; class=&quot;headerlink&quot; title=&quot;Java分页查询page&quot;&gt;&lt;/a&gt;Java分页查询page&lt;/h2&gt;&lt;h3 id=&quot;1-创建page实现类和想要分页数据的实现类&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="page" scheme="http://example.com/tags/page/"/>
    
    <category term="分页" scheme="http://example.com/tags/%E5%88%86%E9%A1%B5/"/>
    
  </entry>
  
  <entry>
    <title>centos7安装MySQL5.7</title>
    <link href="http://example.com/2021/06/29/LinuxAndMysql/"/>
    <id>http://example.com/2021/06/29/LinuxAndMysql/</id>
    <published>2021-06-29T08:40:20.000Z</published>
    <updated>2021-06-29T08:42:13.947Z</updated>
    
    <content type="html"><![CDATA[<h2 id="centos7安装MySQL5-7"><a href="#centos7安装MySQL5-7" class="headerlink" title="centos7安装MySQL5.7"></a>centos7安装MySQL5.7</h2><p><strong>下载MySQL的安装引导</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -i -c http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm</span><br></pre></td></tr></table></figure><p><strong>安装MySQL安装引导</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install mysql57-community-release-el7-10.noarch.rpm</span><br></pre></td></tr></table></figure><p><strong>安装MySQL服务</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install mysql-community-server</span><br></pre></td></tr></table></figure><p><strong>启动MySQL服务</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start  mysqld.service</span><br></pre></td></tr></table></figure><p><strong>检查MySQL状态</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status mysqld.service</span><br></pre></td></tr></table></figure><p><strong>获取MySQL密码</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep &quot;password&quot; /var/log/mysqld.log</span><br></pre></td></tr></table></figure><p><strong>使用刚获得到的初始密码进入MySQL</strong></p><p><strong>修改用户密码</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;new password&#39;;</span><br></pre></td></tr></table></figure><p><strong>允许用户远程访问</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on *.* to &#39;root&#39;@&#39;%&#39; identified by &#39;your password&#39; with grant option;#表示所有的主机都可以使用此账户登录，你也可以设定指定的IP地址</span><br></pre></td></tr></table></figure><p><strong>刷新权限</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush privileges; </span><br></pre></td></tr></table></figure><p><strong>关闭防火墙</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br><span class="line">systemctl status firewalld.service</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;centos7安装MySQL5-7&quot;&gt;&lt;a href=&quot;#centos7安装MySQL5-7&quot; class=&quot;headerlink&quot; title=&quot;centos7安装MySQL5.7&quot;&gt;&lt;/a&gt;centos7安装MySQL5.7&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;下载</summary>
      
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    
    <category term="安装" scheme="http://example.com/tags/%E5%AE%89%E8%A3%85/"/>
    
    <category term="MySQL" scheme="http://example.com/tags/MySQL/"/>
    
    <category term="centos7" scheme="http://example.com/tags/centos7/"/>
    
  </entry>
  
  <entry>
    <title>JavaIO各种流的运用</title>
    <link href="http://example.com/2021/04/21/JavaIO/"/>
    <id>http://example.com/2021/04/21/JavaIO/</id>
    <published>2021-04-20T18:16:20.000Z</published>
    <updated>2021-05-18T06:50:43.648Z</updated>
    
    <content type="html"><![CDATA[<h3 id="IO操作"><a href="#IO操作" class="headerlink" title="IO操作"></a>IO操作</h3><img src="https://tva4.sinaimg.cn/large/007aXOcdly1gqmkteblmvj30j30l70xn.jpg" alt="iostream2xx" width="687" data-width="687" data-height="763"><p>输入输出：站在程序角度，输入(Input)-读,    输出(Ouput)-写</p><p>使用FIle类操作文件或者目录</p><h4 id="File类的常见方法"><a href="#File类的常见方法" class="headerlink" title="File类的常见方法"></a>File类的常见方法</h4><table><thead><tr><th>方法名</th><th>说明</th></tr></thead><tbody><tr><td>boolean  exists()</td><td>判断文件或者目录是否存在</td></tr><tr><td>boolean isFile()</td><td>判断是否是文件</td></tr><tr><td>boolean isDirectory()</td><td>判断是否是目录</td></tr><tr><td>String getPath()</td><td>返回此对象表示的文件的相对路径</td></tr><tr><td>String getAbsolutePath()</td><td>返回此对象表示的文件的绝对路径名</td></tr><tr><td>String getName()</td><td>返回此对象表示的文件或者目录的名称</td></tr><tr><td>boolean delete()</td><td>删除此对象指定的文件或目录</td></tr><tr><td>boolean createNewFile()</td><td>创建名称的空文件，不创建文件夹</td></tr><tr><td>long leng()</td><td>返回文件的长度，的那位为字节，如果文件不存在返回OL</td></tr></tbody></table><h4 id="使用字节流读写文本文件"><a href="#使用字节流读写文本文件" class="headerlink" title="使用字节流读写文本文件"></a>使用字节流读写文本文件</h4><h5 id="字节输入流-读文件-："><a href="#字节输入流-读文件-：" class="headerlink" title="字节输入流(读文件)："></a>字节输入流(读文件)：</h5><p>InputStream-FileInputStream-read()</p><p>FileInputSream对象的read()方法有两种方法：read()=======read(byte[])</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//todo 首先要引入资源</span></span><br><span class="line">        <span class="comment">//创建file对象写入相应路径</span></span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="string">&quot;d:/mary/demo.txt&quot;</span>);</span><br><span class="line">        <span class="comment">//创建FileInputStream对象，先把它设置为null，以便在结束时候关闭。</span></span><br><span class="line">        FileInputStream fileInputStream = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// TODO 创建FileInputStream对象，把file对象路径赋值给FileInputStream对象，也可以赋值给一个路径。</span></span><br><span class="line">            fileInputStream = <span class="keyword">new</span> FileInputStream(file);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// todo 借助FileInputStream对象的read()方法来读取文件,read()这个方法要抛出异常</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 方法1，使用read()</span></span><br><span class="line"><span class="comment">//            int data;    //读取到的每个字节的整数表示形式</span></span><br><span class="line"><span class="comment">//            while((data = fileInputStream.read()) != -1)&#123;</span></span><br><span class="line"><span class="comment">//                //把data这个int类型转换成char类型才能看到字符</span></span><br><span class="line"><span class="comment">//                System.out.print((char)(data));</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//方法2，使用read(byte[])</span></span><br><span class="line">            <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="keyword">int</span> d;</span><br><span class="line">            <span class="keyword">while</span>((d = fileInputStream.read(bytes)) != -<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;d; i++)&#123;</span><br><span class="line">                    System.out.print((<span class="keyword">char</span>)bytes[i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">//todo 结束后必须close关闭流，节省资源，close（）也会有异常</span></span><br><span class="line">                fileInputStream.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="字节输出流-写文件"><a href="#字节输出流-写文件" class="headerlink" title="字节输出流(写文件)"></a>字节输出流(写文件)</h5><p>OuputSteam-FileOutStream-write()</p><p>FileOutputStream这个类有两个构造，个是只添加路径或者file对象，另一个是还可以追加一个true，意思就是在原有的内容上添加新内容。</p><p>FileOutputStream写入方法  write(byte[])=====write(byte[] ,int off int len);</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestFileOutputStream</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// todo 1首先引入资源，</span></span><br><span class="line">        <span class="comment">// 创建file实例</span></span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="string">&quot;d:/mary/demo.txt&quot;</span>);</span><br><span class="line">        <span class="comment">// todo 2创建FileOutputStream这个对象实例，写在外部方便关闭流</span></span><br><span class="line">        FileOutputStream fileOutputStream = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//  把file这个对象传进fileOutputStream实例</span></span><br><span class="line">            <span class="comment">//fileOutputStream = new FileOutputStream(file);</span></span><br><span class="line">            <span class="comment">// todo FileOutputStream这个类有两个构造，一个是只添加路径或者file对象，另一个是还可以追加一个true，意思就是在原有的内容上添加新内容</span></span><br><span class="line">            fileOutputStream = <span class="keyword">new</span> FileOutputStream(file,<span class="keyword">true</span>);</span><br><span class="line">            <span class="comment">//创建一个String变量，</span></span><br><span class="line">            String str = <span class="string">&quot;好好学习，天天向上呀&quot;</span>;</span><br><span class="line">            <span class="comment">//把这个String类型变量变成字节，</span></span><br><span class="line">            <span class="keyword">byte</span>[] strs = str.getBytes();</span><br><span class="line">            <span class="comment">// todo 3使用FileOutputStream的write这个方法把byte字节类型的变量写入文件</span></span><br><span class="line">            fileOutputStream.write(strs,<span class="number">0</span>,strs.length);</span><br><span class="line">            System.out.println(<span class="string">&quot;ok啦&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// todo 4最后使用完这个流，使用close()方法关闭流</span></span><br><span class="line">                fileOutputStream.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="使用字符流读写文本文件"><a href="#使用字符流读写文本文件" class="headerlink" title="使用字符流读写文本文件"></a>使用字符流读写文本文件</h4><p>Reder类是是字符输入流的基类-抽象类</p><h5 id="字符输入流"><a href="#字符输入流" class="headerlink" title="字符输入流"></a>字符输入流</h5><p>Rader-InputStreamReader-FileReader-BufferedReader</p><h6 id="FileReader"><a href="#FileReader" class="headerlink" title="FileReader"></a>FileReader</h6><p>FileReader是Reader类的孙子</p><p>FileReader(File file) ==== FileReader(String name)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestFileReader</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//    todo 1引入资源</span></span><br><span class="line">        FileReader fileReader = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//    todo 2创建FileReader对象</span></span><br><span class="line">            fileReader = <span class="keyword">new</span> FileReader(<span class="string">&quot;D:/mary/demo.txt&quot;</span>);</span><br><span class="line">            StringBuffer stringBuffer = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">            <span class="keyword">char</span>[] bytes = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="keyword">int</span> i ;</span><br><span class="line">            <span class="comment">// todo 调用FileReader对象的read方法来读取文件</span></span><br><span class="line">            <span class="keyword">while</span>((i = fileReader.read(bytes)) != -<span class="number">1</span>)&#123;</span><br><span class="line">                stringBuffer.append(bytes);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(stringBuffer);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// todo 最后使用FileReader的close()方法关闭流</span></span><br><span class="line">                fileReader.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="InputStreamReader"><a href="#InputStreamReader" class="headerlink" title="InputStreamReader"></a>InputStreamReader</h6><p>InputStream是reader的子类</p><p>它在创建实例时，要传进一个FileInputStream类，还可以指定编码格式</p><p>InputStreamReader(InputStream in)======InputStreamReader(InputStream in , String charsetName)</p><p><strong>此类和FileReader一样，就是在创建时候穿的参数不同</strong></p><p>获取本地平台的字符编码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(System.getProperty(<span class="string">&quot;file.encoding&quot;</span>));</span><br></pre></td></tr></table></figure><h6 id="BufferedReder"><a href="#BufferedReder" class="headerlink" title="BufferedReder"></a>BufferedReder</h6><p>BufferedReader是Reader的子类，创建实例时，传进Reader类，它是带有缓冲区的字符输入流，按行读取文件，提高了文件读取效率。</p><p>构造方法：BufferedReader(Reader in)</p><p>方法：readLine()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestBufferedReader</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        FileInputStream fileInputStream = <span class="keyword">null</span>;</span><br><span class="line">        InputStreamReader inputStreamReader = <span class="keyword">null</span>;</span><br><span class="line">        BufferedReader bufferedReader = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            fileInputStream = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;d:/mary/demo.txt&quot;</span>);</span><br><span class="line">            inputStreamReader = <span class="keyword">new</span> InputStreamReader(fileInputStream,<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">            bufferedReader = <span class="keyword">new</span> BufferedReader(inputStreamReader);</span><br><span class="line">            String s = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">while</span>((s = bufferedReader.readLine()) != <span class="keyword">null</span>)&#123;</span><br><span class="line">                System.out.println(s);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                bufferedReader.close();</span><br><span class="line">                inputStreamReader.close();</span><br><span class="line">                fileInputStream.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>关闭流时，后开先关</strong></p><h4 id="字符输出流"><a href="#字符输出流" class="headerlink" title="字符输出流"></a>字符输出流</h4><p>Writer类是字符输出流的基类-抽象类</p><p>Writer-OutpusStreamWriter-FileWriter-BufferedWriter</p><h5 id="FileWriter"><a href="#FileWriter" class="headerlink" title="FileWriter"></a>FileWriter</h5><p>构造方法：FileWriter(File file)====FileWriter(String name)  ,加Boolean的true是在原有文件追加文件</p><p>常用方法： write(String str)====write(String str, int off, int len)====void close()====void flush()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestFileWrite</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        FileWriter fileWriter = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            fileWriter= <span class="keyword">new</span> FileWriter(<span class="string">&quot;d:/mary/demo.txt&quot;</span>);</span><br><span class="line">            String str = <span class="string">&quot;Holle,world!!!&quot;</span>;</span><br><span class="line">            fileWriter.write(str);</span><br><span class="line">            fileWriter.flush();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                fileWriter.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="OutpusStreamWriter"><a href="#OutpusStreamWriter" class="headerlink" title="OutpusStreamWriter"></a>OutpusStreamWriter</h5><p>构造： OutputStreamWriter(OutputStream out)==== OutputStreamWriter(OutputStream out ，String charsetName) </p><p>创建这个实例时候可以指定字符编码格式，代码和FlieWrirer一样。</p><h5 id="BufferedWriter"><a href="#BufferedWriter" class="headerlink" title="BufferedWriter"></a>BufferedWriter</h5><p>BufferedWriter是Writer类的子类，它带有缓冲区。</p><p>构造： BufferedWriter(Writer out)    方法：write()====newLine()===fllush()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestBufferedWriter</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        FileOutputStream fileOutputStream = <span class="keyword">null</span>;</span><br><span class="line">        OutputStreamWriter outputStreamWriter = <span class="keyword">null</span>;</span><br><span class="line">        BufferedWriter bufferedWriter = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            fileOutputStream = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;d:/mary/demo.txt&quot;</span>);</span><br><span class="line">            outputStreamWriter = <span class="keyword">new</span> OutputStreamWriter(fileOutputStream,<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">            bufferedWriter = <span class="keyword">new</span> BufferedWriter(outputStreamWriter);</span><br><span class="line">            bufferedWriter.write(<span class="string">&quot;哈哈哈哈&quot;</span>);</span><br><span class="line">            bufferedWriter.newLine();</span><br><span class="line">            bufferedWriter.write(<span class="string">&quot;我是第二行&quot;</span>);</span><br><span class="line">            bufferedWriter.flush();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                bufferedWriter.close();</span><br><span class="line">                outputStreamWriter.close();</span><br><span class="line">                fileOutputStream.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="使用字节流读写二进制文件"><a href="#使用字节流读写二进制文件" class="headerlink" title="使用字节流读写二进制文件"></a>使用字节流读写二进制文件</h4><p>DataOutputStream、DataInputStream</p><p>DataOutputStream传参是FileOutputStream,DataInputStream传参是FileInputStream</p><p>其方法跟这两个是一样的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDataInputAndOutput</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        FileInputStream fileInputStream = <span class="keyword">null</span>;</span><br><span class="line">        DataInputStream dataInputStream = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        FileOutputStream fileOutputStream = <span class="keyword">null</span>;</span><br><span class="line">        DataOutputStream dataOutputStream = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            fileInputStream = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;d:/mary/myimg.jpg&quot;</span>);</span><br><span class="line">            dataInputStream = <span class="keyword">new</span> DataInputStream(fileInputStream);</span><br><span class="line">            fileOutputStream = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;d:/mary/myqi.jpg&quot;</span>);</span><br><span class="line">            dataOutputStream = <span class="keyword">new</span> DataOutputStream(fileOutputStream);</span><br><span class="line">            <span class="keyword">int</span> tepe;</span><br><span class="line">            <span class="keyword">while</span> ((tepe = dataInputStream.read()) != -<span class="number">1</span>)&#123;</span><br><span class="line">                dataOutputStream.write(tepe);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;复制完毕&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                dataInputStream.close();</span><br><span class="line">                fileInputStream.close();</span><br><span class="line">                dataOutputStream.close();</span><br><span class="line">                fileOutputStream.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="使用序列化和反序列化保持和恢复对象信息"><a href="#使用序列化和反序列化保持和恢复对象信息" class="headerlink" title="使用序列化和反序列化保持和恢复对象信息"></a>使用序列化和反序列化保持和恢复对象信息</h4><p>ObjectOutputStream-序列化</p><p>ObjectInputStream-反序列化</p><p>在序列化对象时候，必须要把类实现Serializable接口。否则会抛出NotSerializableException异常</p><p>在反序列化对象时候，要把反序列化出来的对象强转成你自己定义的类。</p><p>在序列化和反序列化时候如果不希望某个成员变量被序列化时，可以加入transient这个关键字可以不被反序列化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Student stu = <span class="keyword">new</span> Student(<span class="number">1</span>,<span class="string">&quot;Mary&quot;</span>,<span class="string">&quot;地球村&quot;</span>);</span><br><span class="line">        <span class="comment">//StudentTest.serialize(&quot;d:/Student.txt&quot;,stu);</span></span><br><span class="line">        StudentTest.deserialization(<span class="string">&quot;d:/Student.txt&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">serialize</span><span class="params">(String Path , Student stu)</span></span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(Path);</span><br><span class="line">        FileOutputStream fos = <span class="keyword">null</span>;</span><br><span class="line">        ObjectOutputStream oos = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            fos = <span class="keyword">new</span> FileOutputStream(file);</span><br><span class="line">            oos = <span class="keyword">new</span> ObjectOutputStream(fos);</span><br><span class="line">            oos.writeObject(stu);</span><br><span class="line">            oos.flush();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                oos.close();</span><br><span class="line">                fos.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">deserialization</span><span class="params">(String Path)</span></span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(Path);</span><br><span class="line">        FileInputStream fis = <span class="keyword">null</span>;</span><br><span class="line">        ObjectInputStream ois = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            fis = <span class="keyword">new</span> FileInputStream(file);</span><br><span class="line">            ois = <span class="keyword">new</span> ObjectInputStream(fis);</span><br><span class="line">            Student stu = (Student) ois.readObject();</span><br><span class="line">            System.out.println(stu);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                ois.close();</span><br><span class="line">                fis.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;IO操作&quot;&gt;&lt;a href=&quot;#IO操作&quot; class=&quot;headerlink&quot; title=&quot;IO操作&quot;&gt;&lt;/a&gt;IO操作&lt;/h3&gt;&lt;img src=&quot;https://tva4.sinaimg.cn/large/007aXOcdly1gqmkteblmvj30j</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="访问修饰符" scheme="http://example.com/tags/%E8%AE%BF%E9%97%AE%E4%BF%AE%E9%A5%B0%E7%AC%A6/"/>
    
  </entry>
  
  <entry>
    <title>CSStransform</title>
    <link href="http://example.com/2021/04/12/csstransform/"/>
    <id>http://example.com/2021/04/12/csstransform/</id>
    <published>2021-04-12T15:16:20.000Z</published>
    <updated>2021-05-18T07:06:12.049Z</updated>
    
    <content type="html"><![CDATA[<p>在CSS3中，可以利用transform功能来实现文字或图像的旋转、扭曲、缩放、位移、矩阵、原点这六种类型的变形处理，下面将详细讲解transform的使用。</p><h3 id="变形–旋转-rotate"><a href="#变形–旋转-rotate" class="headerlink" title="变形–旋转 rotate()"></a>变形–旋转 rotate()</h3><p><img src="http://yy1271421134.hkg03.bdysite.com/zb_users/plugin/Jz52_code/copy.svg" alt="点击复制代码"> CSS</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-class">.box</span>&#123;<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">45deg</span>);&#125;</span><br></pre></td></tr></table></figure><p> 顺时针旋转45度</p><h3 id="变形–扭曲-skew"><a href="#变形–扭曲-skew" class="headerlink" title="变形–扭曲 skew()"></a>变形–扭曲 skew()</h3><p><img src="http://yy1271421134.hkg03.bdysite.com/zb_users/plugin/Jz52_code/copy.svg" alt="点击复制代码"> CSS</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-class">.box</span>&#123;<span class="attribute">transform</span>:<span class="built_in">skew</span>(<span class="number">45deg</span>);&#125;</span><br></pre></td></tr></table></figure><p>通过skew（）函数将长方形变成平行四边形。<br>  Skew()具有三种情况：<br>  1、skew(x,y)使元素在水平和垂直方向同时扭曲（X轴和Y轴同时按一定的角度值进行扭曲变形）<br>  2、skewX(x)仅使元素在水平方向扭曲变形（X轴扭曲变形）<br>  3、skewY(y)仅使元素在垂直方向扭曲变形（Y轴扭曲变形）</p><h3 id="变形–缩放-scale"><a href="#变形–缩放-scale" class="headerlink" title="变形–缩放 scale()"></a>变形–缩放 scale()</h3><p><img src="http://yy1271421134.hkg03.bdysite.com/zb_users/plugin/Jz52_code/copy.svg" alt="点击复制代码"> CSS</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-class">.box</span>&#123;<span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.5</span>,<span class="number">0.5</span>);&#125;</span><br></pre></td></tr></table></figure><p>  缩放 scale 具有三种情况：<br>  1、 scale(X,Y)使元素水平方向和垂直方向同时缩放（也就是X轴和Y轴同时缩放）<br>  2、scaleX(x)元素仅水平方向缩放（X轴缩放）<br>  3、scaleY(y)元素仅垂直方向缩放（Y轴缩放）<br>  scale()的取值默认的值为1，当值设置为0.01到0.99之间的任何值，作用使一个元素缩小；而任何大于或等于1.01的值，作用是让元素放大。</p><h3 id="变形–位移-translate"><a href="#变形–位移-translate" class="headerlink" title="变形–位移 translate()"></a>变形–位移 translate()</h3><p><img src="http://yy1271421134.hkg03.bdysite.com/zb_users/plugin/Jz52_code/copy.svg" alt="点击复制代码"> CSS</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-class">.box</span>&#123;<span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">50px</span>,<span class="number">100px</span>);&#125;</span><br></pre></td></tr></table></figure><p> 通过translate()函数将元素向Y轴下方移动50px,X轴右方移动100px。<br>  translate我们分为三种情况：<br>  1、translate(x,y)水平方向和垂直方向同时移动（也就是X轴和Y轴同时移动）<br>  2、translateX(x)仅水平方向移动（X轴移动）<br>  3、translateY(Y)仅垂直方向移动（Y轴移动）  </p><h3 id="变形–矩阵-matrix"><a href="#变形–矩阵-matrix" class="headerlink" title="变形–矩阵 matrix ()"></a>变形–矩阵 matrix ()</h3><p><img src="http://yy1271421134.hkg03.bdysite.com/zb_users/plugin/Jz52_code/copy.svg" alt="点击复制代码"> CSS</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-class">.box</span>&#123;<span class="attribute">transform</span>: <span class="built_in">matrix</span>(<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">100</span>,<span class="number">100</span>);&#125;</span><br></pre></td></tr></table></figure><p>matrix() 6个属性的意思的：第一个宽度比例1就是原大小，<br>第二个是上下倾斜1就是2倍，2就是3倍，0就是不倾斜<br>第三个是左右倾斜，数字和第二个一样的意思，<br>第四个是高度比例1就是原大小，<br>第五个是X方向的像素位移，X方向就是左右，<br>第六个是Y方向的像素位移，X方向就是上下*/</p><h3 id="变形–原点-transform-origin"><a href="#变形–原点-transform-origin" class="headerlink" title="变形–原点 transform-origin"></a>变形–原点 transform-origin</h3><p><img src="http://yy1271421134.hkg03.bdysite.com/zb_users/plugin/Jz52_code/copy.svg" alt="点击复制代码"> CSS</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-class">.box</span>&#123;<span class="attribute">transform-origin</span>: left top;<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">45deg</span>); &#125;</span><br></pre></td></tr></table></figure><p> 改变元素原点到左上角，然后进行顺时旋转45度。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在CSS3中，可以利用transform功能来实现文字或图像的旋转、扭曲、缩放、位移、矩阵、原点这六种类型的变形处理，下面将详细讲解transform的使用。&lt;/p&gt;
&lt;h3 id=&quot;变形–旋转-rotate&quot;&gt;&lt;a href=&quot;#变形–旋转-rotate&quot; class=&quot;</summary>
      
    
    
    
    <category term="css" scheme="http://example.com/categories/css/"/>
    
    
    <category term="css" scheme="http://example.com/tags/css/"/>
    
    <category term="transform" scheme="http://example.com/tags/transform/"/>
    
  </entry>
  
  <entry>
    <title>异常</title>
    <link href="http://example.com/2021/03/25/exception/"/>
    <id>http://example.com/2021/03/25/exception/</id>
    <published>2021-03-25T03:13:20.000Z</published>
    <updated>2021-03-25T03:18:42.430Z</updated>
    
    <content type="html"><![CDATA[<h2 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h2><h3 id="什么是异常？"><a href="#什么是异常？" class="headerlink" title="什么是异常？"></a>什么是异常？</h3><p>异常是指在程序的运行过程中所发生的不正常的事件，他会中断正在循行的程序</p><h3 id="异常处理的5个关键字"><a href="#异常处理的5个关键字" class="headerlink" title="异常处理的5个关键字"></a>异常处理的5个关键字</h3><h4 id="捕捉异常"><a href="#捕捉异常" class="headerlink" title="捕捉异常:"></a>捕捉异常:</h4><ul><li><p>try：执行可能产生的异常代码</p></li><li><p>catch：捕捉异常</p></li><li><p>finally：无论是否发生异常，代码总能执行(除非JVM停电System.exit(1))</p></li></ul><h4 id="声明异常"><a href="#声明异常" class="headerlink" title="声明异常"></a>声明异常</h4><ul><li>throws:声明方法可能要抛出的异常</li></ul><h4 id="抛出异常"><a href="#抛出异常" class="headerlink" title="抛出异常"></a>抛出异常</h4><ul><li>throw:手动抛出异常</li></ul><h3 id="使用try-catch块捕获异常，分为三种情况："><a href="#使用try-catch块捕获异常，分为三种情况：" class="headerlink" title="使用try-catch块捕获异常，分为三种情况："></a>使用try-catch块捕获异常，分为三种情况：</h3><h4 id="第一种情况-没有异常"><a href="#第一种情况-没有异常" class="headerlink" title="第一种情况(没有异常)"></a>第一种情况(没有异常)</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> class <span class="title">method</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="comment">//代码块(这块区域不会产生异常)</span></span><br><span class="line">    &#125;<span class="keyword">catch</span>(异常类型 e)&#123;</span><br><span class="line">        <span class="comment">//对异常进行处理的代码块</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//代码段</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行到try块里没有检查出异常代码则会不执行catch里的代码块。</p><h4 id="第二种情况-出现异常"><a href="#第二种情况-出现异常" class="headerlink" title="第二种情况(出现异常)"></a>第二种情况(出现异常)</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> class <span class="title">method</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="comment">//代码段1</span></span><br><span class="line">        <span class="comment">//产生异常代码段2</span></span><br><span class="line">        <span class="comment">//代码段3</span></span><br><span class="line">    &#125;<span class="keyword">catch</span>(异常类型 e)&#123;</span><br><span class="line">        <span class="comment">//对异常进行处理的代码块4</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//代码段5</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>异常是一种特殊的对象，类型为Java.lang.Exception或其子类</strong></p><p>执行到try时候发现异常–产生异常对象–异常类型匹配—进入catch代码块—然后在执行try-catch后的代码</p><h4 id="第三种情况-异常类型不匹配"><a href="#第三种情况-异常类型不匹配" class="headerlink" title="第三种情况(异常类型不匹配)"></a>第三种情况(异常类型不匹配)</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> class <span class="title">method</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="comment">//代码段1</span></span><br><span class="line">        <span class="comment">//产生异常代码段2</span></span><br><span class="line">        <span class="comment">//代码段3</span></span><br><span class="line">    &#125;<span class="keyword">catch</span>(异常类型 e)&#123;</span><br><span class="line">        <span class="comment">//对异常进行处理的代码块4</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//代码段5</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行到try时候发现异常–产生异常对象–异常类型不匹配—程序中断运行</p><h4 id="在try-catch块后加入finally块"><a href="#在try-catch块后加入finally块" class="headerlink" title="在try-catch块后加入finally块"></a>在try-catch块后加入finally块</h4><ul><li>是否发生异常都执行</li><li>不执行的唯一情况</li></ul><img src="http://tva3.sinaimg.cn/thumbnail/007aXOcdly1govze95n0lj30om0al768.jpg" alt="image"><h3 id="声明异常-throws"><a href="#声明异常-throws" class="headerlink" title="声明异常(throws)"></a>声明异常(throws)</h3><p><strong>throws声明某个方法可能抛出的各种异样，多个异常用逗号隔开。</strong></p><h3 id="抛出异常-throw"><a href="#抛出异常-throw" class="headerlink" title="抛出异常(throw)"></a>抛出异常(throw)</h3><p><strong>除了系统自动抛出异常外，有些问题需要程序员自行抛出异常</strong></p><table><thead><tr><th>throw</th><th>throws</th></tr></thead><tbody><tr><td>生成并抛出异常</td><td>声明方法内抛出了异常</td></tr><tr><td>位于方法体内，可作为单独语句使用</td><td>必须跟在方法参数列表后面，不能单独使用</td></tr><tr><td>抛出一个异常对象，且只能是一个</td><td>声明抛出异常类型，可以跟多个异常</td></tr></tbody></table><h3 id="自定义异常"><a href="#自定义异常" class="headerlink" title="自定义异常"></a>自定义异常</h3><p>当JDK中的异常类型不能满足程序的需要时，可以自定义异常类</p><p>使用自定义异常的步骤：</p><ol><li>定义异常类(继承Throwable、继承Excepion或者RuntimeException)</li><li>编写构造方法，继承父类的实现</li><li>实例化自定义对象</li><li>使用throw抛出</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;异常&quot;&gt;&lt;a href=&quot;#异常&quot; class=&quot;headerlink&quot; title=&quot;异常&quot;&gt;&lt;/a&gt;异常&lt;/h2&gt;&lt;h3 id=&quot;什么是异常？&quot;&gt;&lt;a href=&quot;#什么是异常？&quot; class=&quot;headerlink&quot; title=&quot;什么是异常？&quot;&gt;&lt;/a&gt;什</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="Exception" scheme="http://example.com/tags/Exception/"/>
    
  </entry>
  
  <entry>
    <title>重写和重载</title>
    <link href="http://example.com/2021/03/16/overriding/"/>
    <id>http://example.com/2021/03/16/overriding/</id>
    <published>2021-03-16T14:11:20.000Z</published>
    <updated>2021-03-16T14:11:28.930Z</updated>
    
    <content type="html"><![CDATA[<h2 id="方法的重写或方法的覆盖-overriding"><a href="#方法的重写或方法的覆盖-overriding" class="headerlink" title="方法的重写或方法的覆盖(overriding)"></a>方法的重写或方法的覆盖(overriding)</h2><ul><li>子类根据需求从父类继承的方法进行重新编写</li><li>重写时，可以用super.方法的方式来保留父类的方法</li><li>构造方法不能被重写</li></ul><h2 id="方法重写规则"><a href="#方法重写规则" class="headerlink" title="方法重写规则"></a>方法重写规则</h2><ol><li>方法名相同,参数列表相同</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Father</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;父类的method1方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//子类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Son</span> <span class="keyword">extends</span> <span class="title">Father</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;子类的method1方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Son son = <span class="keyword">new</span> Son();</span><br><span class="line">        son.method1();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：子类的method1方法</p><ol start="2"><li>返回值类型相同或者是其子类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Father</span> </span>&#123;</span><br><span class="line">    <span class="comment">//方法返回值类型可以是自定义的数据类型</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Father <span class="title">method1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Father();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//子类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Son</span> <span class="keyword">extends</span> <span class="title">Father</span></span>&#123;</span><br><span class="line">    <span class="comment">//子类方法返回值类型可以是父类方法返回值类型的子类，也是方法重写</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Son <span class="title">method1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;子类重写后的method1方法&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Father();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Son son = <span class="keyword">new</span> Son();</span><br><span class="line">        son.method1();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：子类重写后的method1方法</p><ol start="3"><li>访问权限不能严于父类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Father</span> </span>&#123;</span><br><span class="line">    <span class="comment">//子类重写方法不可以比父类方法访问权限小，可以扩大方法的访问权限</span></span><br><span class="line">    <span class="comment">//子类方法只要访问权限不严于父类，就构成了方法重写</span></span><br><span class="line">     <span class="function"><span class="keyword">void</span> <span class="title">method1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;父类的method1方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//子类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Son</span> <span class="keyword">extends</span> <span class="title">Father</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Son <span class="title">method1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;子类重写后的method1方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Son son = <span class="keyword">new</span> Son();</span><br><span class="line">        son.method1();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：子类重写后的method1方法</p><ol start="4"><li>父类的静态方法不能被子类覆盖为静态方法，父类的非静态方法不能被子类覆盖为静态方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Father</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">method1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;父类的静态method1方法&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//子类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Son</span> <span class="keyword">extends</span> <span class="title">Father</span></span>&#123;</span><br><span class="line">    <span class="comment">//父类的静态方法不能被重写为非静态方法</span></span><br><span class="line">    <span class="comment">//反之，父类的非静态方法也不能被重写为静态方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;子类重写后的非静态method1方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Son son = <span class="keyword">new</span> Son();</span><br><span class="line">        son.method1();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：报错 </p><ol start="5"><li>子类可以定义与父类同名的静态方法，以便在子类中隐藏父类的静态方法(注：静态方法中无法使用super)</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Father</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">method1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;父类的静态method1方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//子类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Son</span> <span class="keyword">extends</span> <span class="title">Father</span></span>&#123;</span><br><span class="line">    <span class="comment">//在子类中可以定义和父类一模一样的静态方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span>  <span class="title">method1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//在静态方法中不能使用super</span></span><br><span class="line">        <span class="comment">//super.method1();</span></span><br><span class="line">        Father.method1();</span><br><span class="line">        System.out.println(<span class="string">&quot;子类重写后的静态method1方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Son son = <span class="keyword">new</span> Son();</span><br><span class="line">        son.method1();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><p>父类的静态method1方法<br>子类重写后的静态method1方法</p><ol start="6"><li>父类的私有方法不能被子类覆盖</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Father</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">method1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;父类的私有method1方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//子类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Son</span> <span class="keyword">extends</span> <span class="title">Father</span></span>&#123;</span><br><span class="line">    <span class="comment">//子类无法重写父类的private方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;子类的私有method1方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Son son = <span class="keyword">new</span> Son();</span><br><span class="line">        son.method1();</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>输出：子类的私有method1方法</p><ol start="7"><li>不能抛出比父类方法跟多的异常 </li></ol><h2 id="重载和重写的区别"><a href="#重载和重写的区别" class="headerlink" title="重载和重写的区别"></a>重载和重写的区别</h2><table><thead><tr><th>比较项</th><th>位置</th><th>方法名</th><th>参数表</th><th>返回值</th><th>访问修饰符</th></tr></thead><tbody><tr><td>方法重写</td><td>子类</td><td>相同</td><td>相同</td><td>相同或是其子类</td><td>不能比父类更严格</td></tr><tr><td>方法重载</td><td>同类</td><td>相同</td><td>不相同</td><td>无关</td><td>无关</td></tr></tbody></table><p>方法重载：同一个类中同名不同参跟访问修饰符以及返回值类型无关的叫重载</p><p>方法重写：在父子类中同名同参，返回值可以和父类返回值相同，可以是子类，访问修饰符只要不严于父类就行。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;方法的重写或方法的覆盖-overriding&quot;&gt;&lt;a href=&quot;#方法的重写或方法的覆盖-overriding&quot; class=&quot;headerlink&quot; title=&quot;方法的重写或方法的覆盖(overriding)&quot;&gt;&lt;/a&gt;方法的重写或方法的覆盖(overrid</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="overriding" scheme="http://example.com/tags/overriding/"/>
    
    <category term="重写" scheme="http://example.com/tags/%E9%87%8D%E5%86%99/"/>
    
    <category term="重载" scheme="http://example.com/tags/%E9%87%8D%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>Java访问修饰符</title>
    <link href="http://example.com/2021/03/15/java_public4/"/>
    <id>http://example.com/2021/03/15/java_public4/</id>
    <published>2021-03-14T18:16:20.000Z</published>
    <updated>2021-03-25T03:31:52.736Z</updated>
    
    <content type="html"><![CDATA[<p>类的访问控制符只能是空或者 public，方法和属性的访问控制符有 4 个，分别是 public、 private、protected 和 friendly，其中 friendly 是一种没有定义专门的访问控制符的默认情况。</p><h3 id="类访问修饰符"><a href="#类访问修饰符" class="headerlink" title="类访问修饰符"></a>类访问修饰符</h3><p>public修饰符：共有访问级别</p><p>默认修饰符：包级私有访问级别</p><h3 id="在-Java-语言中，访问控制修饰符有-4-种。"><a href="#在-Java-语言中，访问控制修饰符有-4-种。" class="headerlink" title="在 Java 语言中，访问控制修饰符有 4 种。"></a>在 Java 语言中，访问控制修饰符有 4 种。</h3><h4 id="1-private"><a href="#1-private" class="headerlink" title="1. private"></a>1. private</h4><p>用 private 修饰的类成员，只能被该类自身的方法访问和修改，而不能被任何其他类（包括该类的子类）访问和引用。</p><h4 id="2-default（默认）"><a href="#2-default（默认）" class="headerlink" title="2. default（默认）"></a>2. default（默认）</h4><p>如果一个类没有访问控制符，说明它具有默认的访问控制特性。这种默认的访问控制权规定，该类只能被同一个包中的类访问和引用，而不能被其他包中的类使用，即使其他包中有该类的子类。这种访问特性又称为包访问性（package private）</p><h4 id="3-protected"><a href="#3-protected" class="headerlink" title="3. protected"></a>3. protected</h4><p>用保护访问控制符 protected 修饰的类成员可以被三种类所访问：该类自身、与它在同一个包中的其他类以及在其他包中的该类的子类。</p><h4 id="4-public"><a href="#4-public" class="headerlink" title="4. public"></a>4. public</h4><p>当一个类被声明为 public 时，它就具有了被其他包中的类访问的可能性，只要包中的其他类在程序中使用 import 语句引入 public 类，就可以访问和引用这个类。</p><h3 id="Java支持四种不同的访问权限："><a href="#Java支持四种不同的访问权限：" class="headerlink" title="Java支持四种不同的访问权限："></a>Java支持四种不同的访问权限：</h3><table><thead><tr><th>修饰符</th><th>说明</th></tr></thead><tbody><tr><td>public</td><td>共有的，对所有类可见。</td></tr><tr><td>protected</td><td>受保护的，对同一包内的类和所有子类可见。</td></tr><tr><td>private</td><td>私有的，在同一类内可见。</td></tr><tr><td>默认的</td><td>在同一包内可见。默认不使用任何修饰符。</td></tr></tbody></table><table><thead><tr><th>修饰符\作用域</th><th>同一个类中</th><th>同一个包中</th><th>子类中</th><th>任何地方</th></tr></thead><tbody><tr><td>privater</td><td>可以</td><td>不可以</td><td>不可以</td><td>不可以</td></tr><tr><td>默认修饰符\default</td><td>可以</td><td>可以</td><td>不可以</td><td>不可以</td></tr><tr><td>protected</td><td>可以</td><td>可以</td><td>可以</td><td>不可以</td></tr><tr><td>public</td><td>可以</td><td>可以</td><td>可以</td><td>可以</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;类的访问控制符只能是空或者 public，方法和属性的访问控制符有 4 个，分别是 public、 private、protected 和 friendly，其中 friendly 是一种没有定义专门的访问控制符的默认情况。&lt;/p&gt;
&lt;h3 id=&quot;类访问修饰符&quot;&gt;&lt;a h</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="访问修饰符" scheme="http://example.com/tags/%E8%AE%BF%E9%97%AE%E4%BF%AE%E9%A5%B0%E7%AC%A6/"/>
    
  </entry>
  
  <entry>
    <title>Java中的Static</title>
    <link href="http://example.com/2021/03/15/javastatic/"/>
    <id>http://example.com/2021/03/15/javastatic/</id>
    <published>2021-03-14T18:16:20.000Z</published>
    <updated>2021-03-15T07:59:40.210Z</updated>
    
    <content type="html"><![CDATA[<h2 id="static修饰符"><a href="#static修饰符" class="headerlink" title="static修饰符"></a>static修饰符</h2><p> static是静态修饰符，主要作用在于创建独立于具体对象的域变量或者方法。 </p><h2 id="static可以用来修饰"><a href="#static可以用来修饰" class="headerlink" title="static可以用来修饰"></a>static可以用来修饰</h2><ul><li>成员变量  （静态变量，可以直接通过类名访问）</li><li>成员方法（静态方法，可以直接通过类名访问）</li><li>代码块（静态代码块，当Java虚拟机加载类时，就会执行该代码）</li></ul><h2 id="static代码块"><a href="#static代码块" class="headerlink" title="static代码块"></a>static代码块</h2><p>jvm加载类时，加载静态代码块。</p><ul><li>如果有多个静态块，按顺序加载。</li><li>每个静态代码块只会被执行一此。</li></ul><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StaticTest</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> num = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        num+=<span class="number">10</span>;</span><br><span class="line">        System.out.println(num);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        num+=<span class="number">10</span>;</span><br><span class="line">        System.out.println(num);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        StaticTest s1 = <span class="keyword">new</span> StaticTest();</span><br><span class="line">        StaticTest s2 = <span class="keyword">new</span> StaticTest();</span><br><span class="line">        System.out.println(StaticTest.num);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p>20<br>30<br>30</p><h2 id="static变量"><a href="#static变量" class="headerlink" title="static变量"></a>static变量</h2><h3 id="类的成员变量包括"><a href="#类的成员变量包括" class="headerlink" title="类的成员变量包括"></a>类的成员变量包括</h3><h3 id="类变量（静态变量）"><a href="#类变量（静态变量）" class="headerlink" title="类变量（静态变量）"></a>类变量（静态变量）</h3><ul><li>被static修饰的变量。</li><li>在内存中只有一个拷贝。</li><li>类内部，可在任何地方直接访问静态变量。</li><li>其它类中，可以通过类名访问。</li></ul><h3 id="实例变量"><a href="#实例变量" class="headerlink" title="实例变量"></a>实例变量</h3><ul><li>没有被static修饰的变量。</li><li>每创建一个实例，就会为实例变量分配一次内存，实例变量可以在内存中有多个拷贝，互不影响。</li></ul><h3 id="static变量作用"><a href="#static变量作用" class="headerlink" title="static变量作用"></a>static变量作用</h3><ul><li>能被类的所有实例共享，可作为实例之间进行交流的共享数据</li><li>如果类的所有实例都包含一个相同的常量属性，可把这个属性定义为静态常量类型，从而节省内存空间</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StaticTest</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> num;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        num++;</span><br><span class="line">        StaticTest s1 = <span class="keyword">new</span> StaticTest();</span><br><span class="line">        s1.num++;</span><br><span class="line">        StaticTest s2 = <span class="keyword">new</span> StaticTest();</span><br><span class="line">        s2.num++;</span><br><span class="line">        StaticTest.num++;</span><br><span class="line">        System.out.println(num);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p>4</p><h2 id="static方法"><a href="#static方法" class="headerlink" title="static方法"></a>static方法</h2><h3 id="静态方法：可直接通过类名访问"><a href="#静态方法：可直接通过类名访问" class="headerlink" title="静态方法：可直接通过类名访问"></a>静态方法：可直接通过类名访问</h3><ul><li>静态方法中不能使用this和super</li><li>不能直接访问所属类的实例变量和实例方法</li><li>可直接访问类的静态变量和方法</li></ul><h3 id="实例方法：通过实例访问"><a href="#实例方法：通过实例访问" class="headerlink" title="实例方法：通过实例访问"></a>实例方法：通过实例访问</h3><ul><li>可直接访问所属类的静态变量、静态方法、实例变量和实例方法</li></ul><h3 id="静态方法必须被实现"><a href="#静态方法必须被实现" class="headerlink" title="静态方法必须被实现"></a>静态方法必须被实现</h3><p>main()就是最常用的静态方法</p><h3 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h3><p>static变量不能创建在方法里面</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * JVM加载类时,加载静态代码块</span></span><br><span class="line"><span class="comment"> * 类内部,可在任何方法内直接访问静态变量;</span></span><br><span class="line"><span class="comment"> * 如果有多个静态代码块,按顺序执行</span></span><br><span class="line"><span class="comment"> * 并且每个静态代码块只执行一次</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StaticText</span> </span>&#123;</span><br><span class="line">    <span class="comment">// TODO 在运行中  static会比实例变量更先运行出来</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">StaticText</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;构造方法执行.....&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;静态代码块执行....&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// TODO 这三种有final 的会比上边static更先一步运行出来  因为final 单独已经存放在了内存地址里边,</span></span><br><span class="line">    <span class="comment">//    所以在没有创建类的情况下,有final 的已经存在于内存地址中</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String JD = <span class="string">&quot;jd&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> String name = <span class="string">&quot;admin&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String atr1 = <span class="string">&quot;atr1&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(name);</span><br><span class="line">        System.out.println(atr1);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// TODO name 放到static中就会报错  因为static方法的速度快  在static起床时,实例变量还没有出生</span></span><br><span class="line">    <span class="comment">//  所以实例变量在这个static方法中不起作用.</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">method2</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//        System.out.println(name);</span></span><br><span class="line"><span class="comment">//        System.out.println(atr1);</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;static修饰符&quot;&gt;&lt;a href=&quot;#static修饰符&quot; class=&quot;headerlink&quot; title=&quot;static修饰符&quot;&gt;&lt;/a&gt;static修饰符&lt;/h2&gt;&lt;p&gt; static是静态修饰符，主要作用在于创建独立于具体对象的域变量或者方法。 &lt;/p</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="static" scheme="http://example.com/tags/static/"/>
    
  </entry>
  
  <entry>
    <title>冒泡排序</title>
    <link href="http://example.com/2021/03/10/Bubble%20Sort/"/>
    <id>http://example.com/2021/03/10/Bubble%20Sort/</id>
    <published>2021-03-10T02:16:20.000Z</published>
    <updated>2021-03-10T02:33:41.416Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Java冒泡排序"><a href="#Java冒泡排序" class="headerlink" title="Java冒泡排序"></a>Java冒泡排序</h2><p> 冒泡排序(Bubble Sort)是一种简单的排序方法。它重复的走访过要排序的数列，一次比较两个元素，如果他们的顺序错误就把他们交换过来。走访数列的工作是重复的进行知道没有在需要叫唤，也就是说该数组已经排序完成。这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端。 </p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol><li>比较相邻的元素。如果第一个比第二个大(或者小)，就交换他们两个。</li><li>对每一对相邻元素做同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。</li><li>针对所有的元素重复以上的步骤，除了最后一个。</li><li>持续每次对越来越少的元素重复上面的步骤，知道没有任何一对数字需要比较。</li></ol><img src="http://tvax4.sinaimg.cn/large/007aXOcdly1goek85nltmg30my075wqv.gif"><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] ages)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] nums = <span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">16</span>,<span class="number">45</span>,<span class="number">25</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">22</span>,<span class="number">16</span>,<span class="number">19</span>,<span class="number">7</span>,<span class="number">36</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nums.length-<span class="number">1</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;nums.length-i-<span class="number">1</span>;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (nums[j]&gt;nums[j+<span class="number">1</span>])&#123;</span><br><span class="line">                    <span class="keyword">int</span> tepo = <span class="number">0</span>;</span><br><span class="line">                    tepo = nums[j+<span class="number">1</span>] ;</span><br><span class="line">                    nums[j+<span class="number">1</span>] = nums[j];</span><br><span class="line">                    nums[j] = tepo;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;nums.length;i++)&#123;</span><br><span class="line">            System.out.print(nums[i]+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="冒泡排序流程图"><a href="#冒泡排序流程图" class="headerlink" title="冒泡排序流程图"></a>冒泡排序流程图</h2><img src="http://tva3.sinaimg.cn/large/007aXOcdly1goekelgfumj30as0fqjrs.jpg"><h2 id="使用Arrays类进行排序"><a href="#使用Arrays类进行排序" class="headerlink" title="使用Arrays类进行排序"></a>使用Arrays类进行排序</h2><h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] ages)</span></span>&#123;</span><br><span class="line">        <span class="comment">//  TODO 使用Arrays类来进行数组排序。</span></span><br><span class="line">        <span class="keyword">int</span>[] nums = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">6</span>,<span class="number">8</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">1</span>&#125;;</span><br><span class="line">        <span class="comment">//输出排序前的顺序</span></span><br><span class="line">        System.out.println(Arrays.toString(nums));</span><br><span class="line">        <span class="comment">// 输出排序后的顺序</span></span><br><span class="line">        Arrays.sort(nums);</span><br><span class="line">        System.out.println(Arrays.toString(nums));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Java冒泡排序&quot;&gt;&lt;a href=&quot;#Java冒泡排序&quot; class=&quot;headerlink&quot; title=&quot;Java冒泡排序&quot;&gt;&lt;/a&gt;Java冒泡排序&lt;/h2&gt;&lt;p&gt; 冒泡排序(Bubble Sort)是一种简单的排序方法。它重复的走访过要排序的数列，一次比</summary>
      
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="冒泡" scheme="http://example.com/tags/%E5%86%92%E6%B3%A1/"/>
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Java循环语句 for while doWhile</title>
    <link href="http://example.com/2021/01/27/Javaxunhuan/"/>
    <id>http://example.com/2021/01/27/Javaxunhuan/</id>
    <published>2021-01-27T12:16:20.000Z</published>
    <updated>2021-03-25T03:34:31.854Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Java循环语句-for-while-doWhile"><a href="#Java循环语句-for-while-doWhile" class="headerlink" title="Java循环语句 for while doWhile"></a>Java循环语句 for while doWhile</h2><h2 id="for循环语句"><a href="#for循环语句" class="headerlink" title="for循环语句"></a>for循环语句</h2><h3 id="for语法"><a href="#for语法" class="headerlink" title="for语法"></a>for语法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">for</span>(初始化表达式;判断表达式;递增（递减）表达式)&#123;</span><br><span class="line">    执行语句;   <span class="comment">//一段代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>for</td><td>for 循环关键字，后面 {}里面是循环主体</td></tr><tr><td>初始化表达式</td><td>数字类型，判断条件中数字的初始值</td></tr><tr><td>判断表达式</td><td>条件语句，返回 boolean 类型，如果是 true 就执行方法体里面的语句</td></tr><tr><td>赋值增减量</td><td>对初值进行加减操作</td></tr></tbody></table><img src="http://tva4.sinaimg.cn/large/007aXOcdly1goejxq5je9j309009lmxm.jpg" alt="image" width="538" data-width="538" data-height="479"><h3 id="for实例"><a href="#for实例" class="headerlink" title="for实例"></a>for实例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demofor2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        System.out.print(<span class="string">&quot;请您输入一个值：&quot;</span>);</span><br><span class="line">        Scanner input = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> num = input.nextInt();</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">0</span>, j=num; i&lt;num;i++,j--)&#123;</span><br><span class="line">            System.out.println(i+<span class="string">&quot;+&quot;</span>+j+<span class="string">&quot;=&quot;</span>+num);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码输出结果：</p><img src="https://tvax3.sinaimg.cn/large/007aXOcdly1gn4wimns4rj30ey0dbt94.jpg" alt="image" width="538" data-width="538" data-height="479"><h2 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h2><h3 id="while语句说明"><a href="#while语句说明" class="headerlink" title="while语句说明"></a>while语句说明</h3><p>while关键字的中文意bai思是du“当……的时候”，也就是当条件成立时循环执行对应的代码。while语句是循环语句中基本的结构，语法格式比较简单。</p><h3 id="while语法"><a href="#while语法" class="headerlink" title="while语法"></a>while语法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(循环条件)&#123;</span><br><span class="line">            <span class="comment">//循环输出语句</span></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><img src="http://tvax3.sinaimg.cn/large/007aXOcdly1goejxzzi5jj307o0770sy.jpg" alt="image" width="538" data-width="538" data-height="479"><h3 id="while实例"><a href="#while实例" class="headerlink" title="while实例"></a>while实例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demowhile2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        System.out.print(<span class="string">&quot;今天你的成绩合格了吗？(y/n)&quot;</span>);</span><br><span class="line">        Scanner input = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String anu = input.next();</span><br><span class="line">        <span class="keyword">while</span>(!<span class="string">&quot;y&quot;</span>.equals(anu))&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;上午学习理论！&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;下午上机编程！&quot;</span>);</span><br><span class="line">            System.out.print(<span class="string">&quot;今天你及格了吗？（y/n）&quot;</span>);</span><br><span class="line">            anu = input.next();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;完成学习任务！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Do-while循环"><a href="#Do-while循环" class="headerlink" title="Do-while循环"></a>Do-while循环</h2><h3 id="Do-while语法说明"><a href="#Do-while语法说明" class="headerlink" title="Do-while语法说明"></a>Do-while语法说明</h3><p>do-while是while的特殊种类，do-while会先运行一次do里的代码，然后进行while的Boolean判定，然后返回按照do里的方法重新运行。（先执行，后判断的while loop）</p><h3 id="Do-while语法"><a href="#Do-while语法" class="headerlink" title="Do-while语法"></a>Do-while语法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">　　<span class="comment">//循环体语句;</span></span><br><span class="line">　　<span class="comment">//控制条件语句;</span></span><br><span class="line">&#125;<span class="keyword">while</span>(判断条件语句);</span><br></pre></td></tr></table></figure><img src="http://tvax4.sinaimg.cn/large/007aXOcdly1goejy4mlyij306k095weq.jpg" alt="image" width="538" data-width="538" data-height="479"><h3 id="Do-while实例"><a href="#Do-while实例" class="headerlink" title="Do-while实例"></a>Do-while实例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoDowhile</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        String jieGuo;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;上机进行编程。&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;今天你及格了吗（y/n）&quot;</span>);</span><br><span class="line">            Scanner input = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">            jieGuo = input.next();</span><br><span class="line">        &#125;<span class="keyword">while</span>(!<span class="string">&quot;y&quot;</span>.equals(jieGuo));</span><br><span class="line">        System.out.println(<span class="string">&quot;及格了就不用上机编程了。&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li><strong>总结: 三种循环语句的区别:</strong><br>1.do…while循环至少执行一次循环体.<br>2.而for,while循环必须先判断条件是否成立，然后决定是否执行循环体语句.<br>3.for相对while和do-while来说相对简洁，判断方式和表达式只用写在一行就行.</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Java循环语句-for-while-doWhile&quot;&gt;&lt;a href=&quot;#Java循环语句-for-while-doWhile&quot; class=&quot;headerlink&quot; title=&quot;Java循环语句 for while doWhile&quot;&gt;&lt;/a&gt;Java循环语句</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="循环语句" scheme="http://example.com/tags/%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5/"/>
    
    <category term="for" scheme="http://example.com/tags/for/"/>
    
    <category term="while" scheme="http://example.com/tags/while/"/>
    
  </entry>
  
  <entry>
    <title>Java判断语句 If Switch</title>
    <link href="http://example.com/2021/01/27/Javaifswitch/"/>
    <id>http://example.com/2021/01/27/Javaifswitch/</id>
    <published>2021-01-27T12:16:20.000Z</published>
    <updated>2021-03-25T03:34:09.004Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Java判断语句If-和Switch"><a href="#Java判断语句If-和Switch" class="headerlink" title="Java判断语句If 和Switch"></a>Java判断语句If 和Switch</h2><h2 id="If条件判断"><a href="#If条件判断" class="headerlink" title="If条件判断"></a>If条件判断</h2><p>1、if语句用于判断不同的条件，根据判断的结果执行不同的代码。</p><p>2、if语句判断的条件可以是关系运算、逻辑运算，if语句根据逻辑值true、false来决定执行不同的代码。 </p><p>3、if语句在开发中使用极为广泛。</p><h3 id="If语法"><a href="#If语法" class="headerlink" title="If语法"></a>If语法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">if</span>（条件<span class="number">1</span>) &#123;</span><br><span class="line">              代码块<span class="number">1</span></span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span>(条件<span class="number">2</span>)&#123;</span><br><span class="line">              代码块<span class="number">2</span></span><br><span class="line">      &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      代码块<span class="number">3</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="If实例"><a href="#If实例" class="headerlink" title="If实例"></a>If实例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demoif</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] str)</span> </span>&#123;</span><br><span class="line">        System.out.print(<span class="string">&quot;请您输入您的考试成绩：&quot;</span>);</span><br><span class="line">        Scanner input = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">double</span> chengJi = input.nextDouble();</span><br><span class="line">        <span class="keyword">if</span> (chengJi&gt;=<span class="number">60</span> &amp; chengJi&lt;<span class="number">90</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;您的考试成绩合格！&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (chengJi&gt;=<span class="number">90</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;您的考试成绩优异！&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;您的成绩不及格，请您重新考试！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在使用if语句时，注意尽量把容易满足的条件写在前面。</p><h2 id="Switch条件判断"><a href="#Switch条件判断" class="headerlink" title="Switch条件判断"></a>Switch条件判断</h2><h3 id="Switch关键字"><a href="#Switch关键字" class="headerlink" title="Switch关键字"></a>Switch关键字</h3><p>1、switch：表示条件表达式，括号里的值是一个规定数据类型的值。</p><p>2、case：表示条件分支，case后面跟一个常量，每个case后面的值必须不一样。case的个数可以为0个。</p><p>3、default：表示默认分支，default可以省略，通常放在最后。</p><p>4、break：表示“停止”，跳出当前switch语句。</p><h3 id="Switch语法"><a href="#Switch语法" class="headerlink" title="Switch语法"></a>Switch语法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> （表达式）&#123;</span><br><span class="line">    <span class="keyword">case</span> 常量<span class="number">1</span>：</span><br><span class="line">        <span class="comment">// 代码块1;</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> 常量<span class="number">2</span>：</span><br><span class="line">　　　　<span class="comment">// 代码块2;</span></span><br><span class="line">　　　　<span class="keyword">break</span>;</span><br><span class="line">　　<span class="keyword">default</span>：</span><br><span class="line">　　　　<span class="comment">// 代码块n;</span></span><br><span class="line">　　　　<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Switch实例"><a href="#Switch实例" class="headerlink" title="Switch实例"></a>Switch实例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoSwitch</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</span><br><span class="line">        System.out.print(<span class="string">&quot;请您输入您的名次：&quot;</span>);</span><br><span class="line">        Scanner input = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> mingCi = input.nextInt();</span><br><span class="line">        <span class="keyword">switch</span>(mingCi)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;恭喜您，获得了一等奖。&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;恭喜您，获得了二等奖。&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;恭喜您，获得了三等奖。&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;对不起，您没有进入前三名。&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Switch语句中的表达式结果类型只支持是int，String，enum型的。</p><h2 id="If和Switch的区别"><a href="#If和Switch的区别" class="headerlink" title="If和Switch的区别"></a>If和Switch的区别</h2><h3 id="相同点："><a href="#相同点：" class="headerlink" title="相同点："></a>相同点：</h3><ul><li>if和switch都是分支语句，都是对超过一种情况的事件进行处理。</li></ul><h3 id="不同点："><a href="#不同点：" class="headerlink" title="不同点："></a>不同点：</h3><ul><li>switch更适合处理分支情况较多，判断条件类型单一，只有一个入口的事件<br>if更适合处理分支情况较少，判断条件类型不是单一的事件</li><li>switch在分支执行完成后，如果没有break跳出的话，会继续向下面的分支执行<br>if只要一个分支被执行了，后面的分支就不再执行了</li><li>switch为等值判断，不允许比如 &gt;= &lt;= 等判断<br>if为等值和区间都可以，if的使用范围更大</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Java判断语句If-和Switch&quot;&gt;&lt;a href=&quot;#Java判断语句If-和Switch&quot; class=&quot;headerlink&quot; title=&quot;Java判断语句If 和Switch&quot;&gt;&lt;/a&gt;Java判断语句If 和Switch&lt;/h2&gt;&lt;h2 id=&quot;I</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="判断语句" scheme="http://example.com/tags/%E5%88%A4%E6%96%AD%E8%AF%AD%E5%8F%A5/"/>
    
    <category term="if Switch" scheme="http://example.com/tags/if-Switch/"/>
    
  </entry>
  
  <entry>
    <title>CSS伪类和伪元素的使用</title>
    <link href="http://example.com/2021/01/13/cssweilei/"/>
    <id>http://example.com/2021/01/13/cssweilei/</id>
    <published>2021-01-13T03:13:58.000Z</published>
    <updated>2021-02-16T08:55:01.123Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CSS伪类和伪元素的使用"><a href="#CSS伪类和伪元素的使用" class="headerlink" title="CSS伪类和伪元素的使用"></a>CSS伪类和伪元素的使用</h1><h2 id="伪类"><a href="#伪类" class="headerlink" title="伪类"></a>伪类</h2><p> <strong>伪类</strong>： 一个伪类是我们可以为了增加CSS选择一个关键字定义一个特殊状态的属于HTML元素。我们可以使用冒号语法 将伪类添加到CSS选择器，:如下所示：a:hover{ … } 。</p><table><thead><tr><th>属性</th><th align="right">描述</th><th>CSS</th></tr></thead><tbody><tr><td>:active</td><td align="right">向被激活的元素添加样式。</td><td>1</td></tr><tr><td>:focus</td><td align="right">向拥有键盘输入焦点的元素添加样式。</td><td>2</td></tr><tr><td>:hover</td><td align="right">当鼠标悬浮在元素上方时，向元素添加样式。</td><td>1</td></tr><tr><td>:link</td><td align="right">向未被访问的链接添加样式。</td><td>1</td></tr><tr><td>:visited</td><td align="right">向已被访问的链接添加样式。</td><td>1</td></tr><tr><td>:first-child</td><td align="right">向元素的第一个子元素添加样式。</td><td>2</td></tr><tr><td>:lang</td><td align="right">向带有指定 lang 属性的元素添加样式。</td><td>2</td></tr><tr><td>:nth-child(2n)</td><td align="right">向元素的偶数元素添加样式</td><td></td></tr></tbody></table><h3 id="a标记的伪类选择器"><a href="#a标记的伪类选择器" class="headerlink" title="a标记的伪类选择器"></a>a标记的伪类选择器</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="comment">/* 超链接为访问时的状态 */</span></span></span><br><span class="line"><span class="css"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span>&#123;</span></span><br><span class="line">color: red;</span><br><span class="line">text-decoration: none;</span><br><span class="line">&#125;</span><br><span class="line">a&#123;</span><br><span class="line">font-size: 300px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="comment">/* 设置超链接访问过的网址状态 */</span></span></span><br><span class="line"><span class="css"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>&#123;</span></span><br><span class="line">color: black;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="comment">/*设置超链接鼠标悬停时候的样式 */</span></span></span><br><span class="line"><span class="css"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">text-shadow</span>: 5<span class="selector-tag">px</span> 5<span class="selector-tag">px</span> 5<span class="selector-tag">px</span> <span class="selector-id">#FF0000</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="comment">/* 设置超链接单机未释放时候的样子 */</span></span></span><br><span class="line"><span class="css"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span>&#123;</span></span><br><span class="line">color: lawngreen;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.baidu.com&quot;</span>&gt;</span>百度一下<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="伪元素"><a href="#伪元素" class="headerlink" title="伪元素"></a>伪元素</h2><p><strong>伪元素</strong>： css的伪元素，之所以被称为伪元素，是因为他们不是真正的页面元素，html没有对应的元素，但是其所有用法和表现行为与真正的页面元素一样，可以对其使用诸如页面元素一样的css样式，表面上看上去貌似是页面的某些元素来展现，实际上是css样式展现的行为，因此被称为伪元素。 </p><table><thead><tr><th>属性</th><th>描述</th><th>CSS</th></tr></thead><tbody><tr><td>:first-letter</td><td>向文本的第一个字母添加特殊样式。</td><td>1</td></tr><tr><td>:first-line</td><td>向文本的首行添加特殊样式。</td><td>1</td></tr><tr><td>:before</td><td>在元素之前添加内容。</td><td>2</td></tr><tr><td>:after</td><td>在元素之后添加内容。</td><td>2</td></tr></tbody></table><h2 id="用于文本的"><a href="#用于文本的" class="headerlink" title="用于文本的"></a>用于文本的</h2><h3 id="first-line-伪元素"><a href="#first-line-伪元素" class="headerlink" title=":first-line 伪元素"></a>:first-line 伪元素</h3><p>可以通过这个属性设置文本第一行的特殊效果，比如一段文字的第一行为红色，其他为黑色。</p><p>如果不通过这个方式来实现，就比较麻烦。因为屏幕适配的原因，你可能不能确定哪些文字属于第一行</p><h3 id="first-letter-伪元素"><a href="#first-letter-伪元素" class="headerlink" title=":first-letter 伪元素"></a>:first-letter 伪元素</h3><p>和first-line 相似，这个只是设置第一个字符的特殊效果。比如第一个字的字体比别的大</p><p>如果不通过这个方式实现，那么就可能还要处理对齐，这种实现方式更方便</p><h3 id="before-和-after伪元素使用"><a href="#before-和-after伪元素使用" class="headerlink" title=":before 和 :after伪元素使用"></a>:before 和 :after伪元素使用</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>伪类<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line">p&#123;</span><br><span class="line"><span class="css"><span class="selector-tag">width</span>: <span class="selector-tag">fit-content</span>;    <span class="comment">/* p标签的宽度随着文字内容长短而变化 */</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-pseudo">::before</span>&#123;</span></span><br><span class="line">content: &#x27;&#x27;;/* 内容为空 */</span><br><span class="line">height: 3px;</span><br><span class="line">background-color: yellow;</span><br><span class="line">display: block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-pseudo">::after</span>&#123;</span></span><br><span class="line">content: &#x27;&#x27;;</span><br><span class="line">height: 3px;</span><br><span class="line">background-color: red;</span><br><span class="line">display: block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>文本文字<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CSS伪类和伪元素的使用&quot;&gt;&lt;a href=&quot;#CSS伪类和伪元素的使用&quot; class=&quot;headerlink&quot; title=&quot;CSS伪类和伪元素的使用&quot;&gt;&lt;/a&gt;CSS伪类和伪元素的使用&lt;/h1&gt;&lt;h2 id=&quot;伪类&quot;&gt;&lt;a href=&quot;#伪类&quot; class=&quot;</summary>
      
    
    
    
    <category term="CSS" scheme="http://example.com/categories/CSS/"/>
    
    
    <category term="CSS" scheme="http://example.com/tags/CSS/"/>
    
    <category term="伪类和伪元素" scheme="http://example.com/tags/%E4%BC%AA%E7%B1%BB%E5%92%8C%E4%BC%AA%E5%85%83%E7%B4%A0/"/>
    
  </entry>
  
  <entry>
    <title>PHP连接MySQL数据库</title>
    <link href="http://example.com/2020/11/11/php11-11/"/>
    <id>http://example.com/2020/11/11/php11-11/</id>
    <published>2020-11-11T13:42:58.000Z</published>
    <updated>2021-01-27T13:33:10.980Z</updated>
    
    <content type="html"><![CDATA[<h2 id="PHP连接MySQL数据库"><a href="#PHP连接MySQL数据库" class="headerlink" title="PHP连接MySQL数据库"></a>PHP连接MySQL数据库</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">header(<span class="string">&#x27;Content-Type:text/html;charset=utf-8&#x27;</span>);</span><br></pre></td></tr></table></figure> <a id="more"></a> <h3 id="1-链接数据库"><a href="#1-链接数据库" class="headerlink" title="//1 链接数据库"></a>//1 链接数据库</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$host = <span class="string">&#x27;localhost&#x27;</span>; <span class="comment">//主机地址</span></span><br><span class="line">$user = <span class="string">&#x27;root&#x27;</span>; <span class="comment">//用户名</span></span><br><span class="line">$password = <span class="string">&#x27;123456&#x27;</span>; <span class="comment">//密码</span></span><br><span class="line">$database = <span class="string">&#x27;project5&#x27;</span>; <span class="comment">//数据库名称</span></span><br><span class="line">$port = <span class="number">3306</span>; <span class="comment">//端口号</span></span><br><span class="line">$link = mysqli_connect($host, $user, $password, $database, $port);  <span class="comment">//链接MySQL</span></span><br><span class="line"><span class="comment">//$link = new mysqli($host, $user, $password, $database, $port);  //另外一种链接数据库语法</span></span><br><span class="line"><span class="comment">//var_dump($link);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//判断链接是否成功</span></span><br><span class="line"><span class="keyword">if</span>($link)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;链接成功！！！&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;链接失败！！！&#x27;</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-执行SQL"><a href="#2-执行SQL" class="headerlink" title="//2 执行SQL"></a>//2 执行SQL</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysqli_query($link,<span class="string">&#x27;set names utf8&#x27;</span>);</span><br><span class="line">$sql = <span class="string">&#x27;select * from news&#x27;</span>;</span><br><span class="line">$res = mysqli_query($link, $sql);</span><br><span class="line">mysqli_close($link);  <span class="comment">//关闭数据库</span></span><br><span class="line"><span class="comment">//$sql = &#x27;update news set title=&quot;你好 中国&quot; where id=1&#x27;;</span></span><br><span class="line"><span class="comment">//$res = mysqli_query($link, $sql);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;&#x27;</span>;</span><br><span class="line"><span class="comment">//var_dump($res);</span></span><br></pre></td></tr></table></figure><h3 id="3-解析结果集-思考：每次取一行还是全取。"><a href="#3-解析结果集-思考：每次取一行还是全取。" class="headerlink" title="//3 解析结果集 思考：每次取一行还是全取。"></a>//3 解析结果集 思考：每次取一行还是全取。</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一行一行取所有数据 mysqli_fetch_row 索引数组 mysqli_fetch_assoc 关联数组</span></span><br><span class="line"><span class="comment">// MYSQLI_BOTH 两者MYSQLI_ASSOC 关联 MYSQLI_NUM 索引</span></span><br><span class="line"><span class="comment">//while($r = mysqli_fetch_array($res,MYSQLI_NUM))&#123;</span></span><br><span class="line"><span class="comment">//// echo &quot;$r[1]====$r[2] ===== $r[3]&quot;,&quot;&lt;br&gt;&quot;;</span></span><br><span class="line"><span class="comment">// var_dump($r);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 一起取出来，然后在显示</span></span><br><span class="line"> $r = mysqli_fetch_all($res,MYSQLI_ASSOC);</span><br><span class="line"><span class="comment">//var_dump($r);</span></span><br><span class="line"><span class="keyword">foreach</span>($r <span class="keyword">as</span> $v)&#123;</span><br><span class="line"><span class="comment">// var_dump($v);</span></span><br><span class="line"><span class="keyword">echo</span> $v[<span class="string">&#x27;title&#x27;</span>].<span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-关闭数据库"><a href="#4-关闭数据库" class="headerlink" title="//4 关闭数据库"></a>//4 关闭数据库</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//mysqli_close($link); </span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;PHP连接MySQL数据库&quot;&gt;&lt;a href=&quot;#PHP连接MySQL数据库&quot; class=&quot;headerlink&quot; title=&quot;PHP连接MySQL数据库&quot;&gt;&lt;/a&gt;PHP连接MySQL数据库&lt;/h2&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;header(&lt;span class=&quot;string&quot;&gt;&amp;#x27;Content-Type:text/html;charset=utf-8&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="PHP" scheme="http://example.com/categories/PHP/"/>
    
    
    <category term="PHP代码" scheme="http://example.com/tags/PHP%E4%BB%A3%E7%A0%81/"/>
    
    <category term="PHP" scheme="http://example.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>MySQL数据库命令</title>
    <link href="http://example.com/2020/11/05/mysql/"/>
    <id>http://example.com/2020/11/05/mysql/</id>
    <published>2020-11-05T12:35:58.000Z</published>
    <updated>2021-02-16T08:53:28.519Z</updated>
    
    <content type="html"><![CDATA[<h1 id="–-管理数据库"><a href="#–-管理数据库" class="headerlink" title="– 管理数据库"></a>– 管理数据库</h1><h2 id="–-1创建数据库"><a href="#–-1创建数据库" class="headerlink" title="– 1创建数据库"></a>– 1创建数据库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE t;</span><br></pre></td></tr></table></figure><p>– 2显示当前数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW DATABASES;</span><br></pre></td></tr></table></figure><p>– 3删除数据库 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP DATABASE t;</span><br></pre></td></tr></table></figure> <a id="more"></a> <h2 id="–-管理数据表"><a href="#–-管理数据表" class="headerlink" title="– 管理数据表"></a>– 管理数据表</h2><p>– 创建数据表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE stu1(</span><br><span class="line">id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT COMMENT &#39;学号&#39;,</span><br><span class="line">NAME VARCHAR(50) NOT NULL COMMENT &#39;姓名&#39;,</span><br><span class="line">age INT COMMENT &#39;年龄&#39;</span><br><span class="line">)ENGINE&#x3D;MYISAM DEFAULT CHARSET&#x3D;&#39;utf8&#39;;</span><br></pre></td></tr></table></figure><h2 id="–-对数据表的数据处理：增-删-改-查"><a href="#–-对数据表的数据处理：增-删-改-查" class="headerlink" title="– 对数据表的数据处理：增 删 改 查"></a>– 对数据表的数据处理：增 删 改 查</h2><p>– 增加数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO STU2(NAME,age) VALUES</span><br><span class="line">(&#39;王五&#39;,20),(&#39;李四&#39; ,20);</span><br></pre></td></tr></table></figure><p>– 删除数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETE FROM stu2 WHERE id &#x3D;3;</span><br></pre></td></tr></table></figure><p>– 修改数据 （设计一个标识例）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE stu2 SET del &#x3D; &#39;1&#39; WHERE id&#x3D;4;</span><br></pre></td></tr></table></figure><h2 id="–-查询操作"><a href="#–-查询操作" class="headerlink" title="– 查询操作"></a>– 查询操作</h2><p>– 1查询所以数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM stu2;</span><br><span class="line">SELECT id,NAME,age,del FROM stu2;</span><br><span class="line"></span><br><span class="line">SELECT NAME &#39;姓名&#39;,age &#39;年龄&#39; FROM stu2;</span><br><span class="line"></span><br><span class="line">SELECT DISTINCT NAME &#39;姓名&#39;,age &#39;年龄&#39; FROM stu2;</span><br></pre></td></tr></table></figure><p>– 2条件查询</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM stu2 WHERE id&#x3D; 3;</span><br></pre></td></tr></table></figure><p>– 查年龄等于20或25的学生姓名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM stu2 WHERE age &#x3D; 20 OR age &#x3D;25;</span><br></pre></td></tr></table></figure><p>– 查询姓’张‘的学生信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM stu2 WHERE NAME LIKE &#39;李%&#39;;</span><br></pre></td></tr></table></figure><p>– 排序  order by   asc  升序（默认） desc 降序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM stu2 ORDER BY age;</span><br></pre></td></tr></table></figure><p>– 分组    group by<br>– 是否删除 人数<br>– 1          5<br>– 0          2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT del &#39;是否删除&#39; , COUNT(*) &#39;人数&#39; FROM stu2 GROUP BY del;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;–-管理数据库&quot;&gt;&lt;a href=&quot;#–-管理数据库&quot; class=&quot;headerlink&quot; title=&quot;– 管理数据库&quot;&gt;&lt;/a&gt;– 管理数据库&lt;/h1&gt;&lt;h2 id=&quot;–-1创建数据库&quot;&gt;&lt;a href=&quot;#–-1创建数据库&quot; class=&quot;headerlink&quot; title=&quot;– 1创建数据库&quot;&gt;&lt;/a&gt;– 1创建数据库&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;CREATE DATABASE t;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;– 2显示当前数据库&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SHOW DATABASES;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;– 3删除数据库 &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;DROP DATABASE t;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="数据库" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="MySQL命令" scheme="http://example.com/tags/MySQL%E5%91%BD%E4%BB%A4/"/>
    
    <category term="数据库" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>PHP验证码</title>
    <link href="http://example.com/2020/10/14/php-1/"/>
    <id>http://example.com/2020/10/14/php-1/</id>
    <published>2020-10-14T15:21:41.000Z</published>
    <updated>2021-01-27T13:32:17.842Z</updated>
    
    <content type="html"><![CDATA[<h2 id="php实现验证码功能"><a href="#php实现验证码功能" class="headerlink" title="php实现验证码功能"></a>php实现验证码功能</h2><h6 id="1一个长方形的底图；"><a href="#1一个长方形的底图；" class="headerlink" title="1一个长方形的底图；"></a>1<strong>一个长方形的底图</strong>；</h6><h6 id="2验证码的内容（数字，数字-英文，中文）；"><a href="#2验证码的内容（数字，数字-英文，中文）；" class="headerlink" title="2验证码的内容（数字，数字+英文，中文）；"></a>2<strong>验证码的内容（数字，数字+英文，中文）</strong>；</h6><h6 id="3各色的干扰点；"><a href="#3各色的干扰点；" class="headerlink" title="3各色的干扰点；"></a>3<strong>各色的干扰点</strong>；</h6><h6 id="4长短颜色不一的干扰线段。"><a href="#4长短颜色不一的干扰线段。" class="headerlink" title="4长短颜色不一的干扰线段。"></a>4<strong>长短颜色不一的干扰线段</strong>。</h6><p>验证码图是长方形的100*30的大小    </p> <a id="more"></a> <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//创建验证码画布</span></span><br><span class="line">$img_w = <span class="number">100</span>;  <span class="comment">//验证码的宽度</span></span><br><span class="line">$img_h = <span class="number">30</span>;   <span class="comment">//验证码的高度</span></span><br><span class="line">$img = imagecreatetruecolor($img_w, $img_h);         <span class="comment">//创建画布</span></span><br><span class="line">$bg_color = imagecolorallocate($img,<span class="number">0xcc</span>,<span class="number">0xcc</span>,<span class="number">0xcc</span>); <span class="comment">//为画布分配颜色</span></span><br><span class="line">imagefill($img,<span class="number">0</span>,<span class="number">0</span>,$bg_color);</span><br><span class="line"></span><br><span class="line">$count = <span class="number">4</span>; <span class="comment">//验证码位数</span></span><br><span class="line">$charset = <span class="string">&#x27;ABCDEFGHJKLMNPQRSTUVWXYZ23456789&#x27;</span>; <span class="comment">//随机因子</span></span><br><span class="line">$charset_len = strlen($charset)<span class="number">-1</span>; <span class="comment">//计算随机因子长度（作为取出时的索引）</span></span><br><span class="line">$code = <span class="string">&#x27;&#x27;</span>; <span class="comment">//保存生成的验证码</span></span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">0</span>; $i&lt;$count; ++$i) &#123;</span><br><span class="line">    <span class="comment">//通过索引取出字符，mt_rand()用于获取指定范围内的随机数</span></span><br><span class="line">$code .= $charset[mt_rand(<span class="number">0</span>,$charset_len)];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//在画布中绘制验证码文本</span></span><br><span class="line">$fontSize = <span class="number">16</span>;    <span class="comment">//文字大小</span></span><br><span class="line">$fontStyle = realpath(<span class="string">&#x27;./SourceCodePro-Bold.ttf&#x27;</span>); <span class="comment">//字体样式</span></span><br><span class="line"><span class="comment">//生成指定长度的验证码</span></span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">0</span>; $i&lt;$count; ++$i)&#123;</span><br><span class="line">    <span class="comment">//随机生成字体颜色</span></span><br><span class="line">    $fontColor = imagecolorallocate($img,mt_rand(<span class="number">0</span>,<span class="number">100</span>),mt_rand(<span class="number">0</span>,<span class="number">50</span>),mt_rand(<span class="number">0</span>,<span class="number">255</span>));</span><br><span class="line">    imagettftext (</span><br><span class="line">    $img,        <span class="comment">//画布资源</span></span><br><span class="line">         $fontSize,  <span class="comment">//文字大小</span></span><br><span class="line">    mt_rand(<span class="number">0</span>,<span class="number">20</span>) - mt_rand(<span class="number">0</span>,<span class="number">25</span>),            <span class="comment">//随机设置文字倾斜角度</span></span><br><span class="line">    $fontSize*$i+<span class="number">20</span>,mt_rand($img_h/<span class="number">2</span>,$img_h), <span class="comment">//随机设置文字坐标，并自动计算间距</span></span><br><span class="line">    $fontColor,  <span class="comment">//文字颜色</span></span><br><span class="line">    $fontStyle,  <span class="comment">//文字字体</span></span><br><span class="line">    $code[$i]  <span class="comment">//文字内容</span></span><br><span class="line">);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//为验证码图片生成彩色噪点</span></span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">0</span>; $i&lt;<span class="number">300</span>; ++$i)&#123;</span><br><span class="line">    <span class="comment">//随机生成颜色</span></span><br><span class="line">    $color = imagecolorallocate($img,mt_rand(<span class="number">0</span>,<span class="number">255</span>),mt_rand(<span class="number">0</span>,<span class="number">255</span>),mt_rand(<span class="number">0</span>,<span class="number">255</span>));</span><br><span class="line">    <span class="comment">//随机绘制干扰点</span></span><br><span class="line">  imagesetpixel($img,mt_rand(<span class="number">0</span>,$img_w),mt_rand(<span class="number">0</span>,$img_h),$color);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">$color = imagecolorallocate($img,mt_rand(<span class="number">0</span>,<span class="number">255</span>),mt_rand(<span class="number">0</span>,<span class="number">255</span>),mt_rand(<span class="number">0</span>,<span class="number">255</span>));</span><br><span class="line">imagerectangle($img, mt_rand(<span class="number">0</span>,$img_h), mt_rand(<span class="number">0</span>,$img_h), mt_rand(<span class="number">0</span>,$img_h), mt_rand(<span class="number">0</span>,$img_h), $color);</span><br><span class="line">imageellipse($img, mt_rand(<span class="number">0</span>,$img_h), mt_rand(<span class="number">0</span>,$img_h), <span class="number">20</span>, <span class="number">20</span>, $color);</span><br><span class="line"><span class="comment">//绘制干扰线</span></span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">0</span>; $i&lt;<span class="number">3</span>; ++$i)&#123;</span><br><span class="line">    <span class="comment">//随机生成干扰线颜色</span></span><br><span class="line">    $color = imagecolorallocate($img,mt_rand(<span class="number">0</span>,<span class="number">255</span>),mt_rand(<span class="number">0</span>,<span class="number">255</span>),mt_rand(<span class="number">0</span>,<span class="number">255</span>));</span><br><span class="line">    <span class="comment">//随机绘制干扰线</span></span><br><span class="line">  imageline($img,mt_rand(<span class="number">0</span>,$img_w),<span class="number">0</span>,mt_rand(<span class="number">0</span>,$img_h*<span class="number">5</span>),$img_h,$color);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//将生成的文本保存到Session中</span></span><br><span class="line">session_start();</span><br><span class="line">$_SESSION[<span class="string">&#x27;captcha&#x27;</span>] = $code;</span><br><span class="line">$fontfile =realpath(<span class="string">&#x27;SourceCodePro-Bold.ttf&#x27;</span>);</span><br><span class="line"><span class="comment">//imagettftext($img, 16, 0, 20, 30, $red, $fontfile, $code);</span></span><br><span class="line"><span class="comment">//imagerectangle($canvas, 50, 50, 150, 150, $pink);</span></span><br><span class="line">header(<span class="string">&#x27;Content-Type: image/gif&#x27;</span>);</span><br><span class="line">imagegif($img);</span><br></pre></td></tr></table></figure><p>​                                                               源码里没有html代码</p><p><img src="D:\blog\source_posts\php-1\php.jpg"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;php实现验证码功能&quot;&gt;&lt;a href=&quot;#php实现验证码功能&quot; class=&quot;headerlink&quot; title=&quot;php实现验证码功能&quot;&gt;&lt;/a&gt;php实现验证码功能&lt;/h2&gt;&lt;h6 id=&quot;1一个长方形的底图；&quot;&gt;&lt;a href=&quot;#1一个长方形的底图；&quot; class=&quot;headerlink&quot; title=&quot;1一个长方形的底图；&quot;&gt;&lt;/a&gt;1&lt;strong&gt;一个长方形的底图&lt;/strong&gt;；&lt;/h6&gt;&lt;h6 id=&quot;2验证码的内容（数字，数字-英文，中文）；&quot;&gt;&lt;a href=&quot;#2验证码的内容（数字，数字-英文，中文）；&quot; class=&quot;headerlink&quot; title=&quot;2验证码的内容（数字，数字+英文，中文）；&quot;&gt;&lt;/a&gt;2&lt;strong&gt;验证码的内容（数字，数字+英文，中文）&lt;/strong&gt;；&lt;/h6&gt;&lt;h6 id=&quot;3各色的干扰点；&quot;&gt;&lt;a href=&quot;#3各色的干扰点；&quot; class=&quot;headerlink&quot; title=&quot;3各色的干扰点；&quot;&gt;&lt;/a&gt;3&lt;strong&gt;各色的干扰点&lt;/strong&gt;；&lt;/h6&gt;&lt;h6 id=&quot;4长短颜色不一的干扰线段。&quot;&gt;&lt;a href=&quot;#4长短颜色不一的干扰线段。&quot; class=&quot;headerlink&quot; title=&quot;4长短颜色不一的干扰线段。&quot;&gt;&lt;/a&gt;4&lt;strong&gt;长短颜色不一的干扰线段&lt;/strong&gt;。&lt;/h6&gt;&lt;p&gt;验证码图是长方形的100*30的大小    &lt;/p&gt;</summary>
    
    
    
    <category term="PHP" scheme="http://example.com/categories/PHP/"/>
    
    
    <category term="PHP验证码" scheme="http://example.com/tags/PHP%E9%AA%8C%E8%AF%81%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客发布文章</title>
    <link href="http://example.com/2020/10/12/%E5%9C%A8%E8%BF%99%E9%87%8C/"/>
    <id>http://example.com/2020/10/12/%E5%9C%A8%E8%BF%99%E9%87%8C/</id>
    <published>2020-10-12T15:16:20.000Z</published>
    <updated>2021-01-27T13:26:21.862Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-创建文章"><a href="#1-创建文章" class="headerlink" title="1 创建文章"></a>1 创建文章</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new &quot;文章名&quot;     &#x2F;&#x2F;安装hexo-asset-image后可使用 </span><br><span class="line">$ hexo n &quot;My New Post&quot;    &#x2F;&#x2F;简写</span><br></pre></td></tr></table></figure> <a id="more"></a> <h2 id="2-编辑文章"><a href="#2-编辑文章" class="headerlink" title="2 编辑文章"></a>2 编辑文章</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">文章头部加</span><br><span class="line">---</span><br><span class="line">title: &#x2F;&#x2F;此处填写文章名</span><br><span class="line">date: &#x2F;&#x2F;此处填写发布日期</span><br><span class="line">tags: </span><br><span class="line">  - &#x2F;&#x2F;此处填写标签名(可多个)</span><br><span class="line">categories: &#x2F;&#x2F;此处填写博客文章分类</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-文章添加图片"><a href="#3-文章添加图片" class="headerlink" title="3 文章添加图片"></a>3 文章添加图片</h2><p> 1 把本地Blog文件下的配置文件（非主题下）<code>_config.yml</code>里的<code>post_asset_folder:</code>选项设置为<code>true</code></p><p> 2 在本地Blog路径下执行<code>npm install hexo-asset-image --save</code> （用于下载安装一个可以上传本地图片的插件）</p><p> 3 运行<code>hexo n &quot;xxxx&quot;</code>来生成md博文</p><p> 会发现在/source/_posts<code>文件夹中除了</code>xxxx.md`文件还生成了一个同名文件夹</p><p> 4最后在<code>xxxx.md</code>引入图片时，先把图片复制到xxxx文件夹中 然后在xxxx.md中按照markdown的格式引入图片：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![你想输入的替代文字](xxxx&#x2F;图片名.jpg) </span><br></pre></td></tr></table></figure><h2 id="3-生产静态文件"><a href="#3-生产静态文件" class="headerlink" title="3 生产静态文件"></a>3 生产静态文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate </span><br><span class="line">$ hexo g      &#x2F;&#x2F;简写 </span><br></pre></td></tr></table></figure><h2 id="5-启动本地服务器"><a href="#5-启动本地服务器" class="headerlink" title="5 启动本地服务器"></a>5 启动本地服务器</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server </span><br><span class="line">$ hexo s      &#x2F;&#x2F;简写 </span><br></pre></td></tr></table></figure><h2 id="5-部署到远端站点"><a href="#5-部署到远端站点" class="headerlink" title="5 部署到远端站点"></a>5 部署到远端站点</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$hexo deploy </span><br><span class="line">$ hexo d       &#x2F;&#x2F;简写 </span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;1-创建文章&quot;&gt;&lt;a href=&quot;#1-创建文章&quot; class=&quot;headerlink&quot; title=&quot;1 创建文章&quot;&gt;&lt;/a&gt;1 创建文章&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &amp;quot;文章名&amp;quot;     &amp;#x2F;&amp;#x2F;安装hexo-asset-image后可使用 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ hexo n &amp;quot;My New Post&amp;quot;    &amp;#x2F;&amp;#x2F;简写&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="博客" scheme="http://example.com/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="博客" scheme="http://example.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>CSS3中的flex布局</title>
    <link href="http://example.com/2020/10/12/cssFlex/"/>
    <id>http://example.com/2020/10/12/cssFlex/</id>
    <published>2020-10-12T15:16:20.000Z</published>
    <updated>2021-05-18T06:59:19.989Z</updated>
    
    <content type="html"><![CDATA[<p>flex是Flexible Box的缩写，意思为“弹性布局”，在使用过程中简单、易用、代码较少，在制作网页的时候经常使用这种方法来进行布局。</p><p>容器设置为flex以后，子元素的float、clear和vertcal-align的属性将失效。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;<span class="attribute">display</span>:flex;&#125;</span><br></pre></td></tr></table></figure><h3 id="容器的六个属性"><a href="#容器的六个属性" class="headerlink" title="容器的六个属性"></a>容器的六个属性</h3><h4 id="flex-direction"><a href="#flex-direction" class="headerlink" title="flex-direction"></a>flex-direction</h4><p>决定主轴的方向（即项目的排列方向）</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">      <span class="attribute">display</span>:flex;</span><br><span class="line">      flex-direction:row;  //默认值，主轴为水平方向，起点在左端。</span><br><span class="line">      flex-direction:row-reverse;  //主轴为水平方向，起点在右端。</span><br><span class="line">      flex-direction:column;  //主轴为垂直方向，起点在上沿。</span><br><span class="line">      flex-direction:column-reverse;  //主轴为垂直方向，起点在下沿。&#125;</span><br></pre></td></tr></table></figure><h4 id="flex-wrap"><a href="#flex-wrap" class="headerlink" title="flex-wrap"></a>flex-wrap</h4><p>定义如果一条轴线排不下，如何换行</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">      <span class="attribute">display</span>:flex;</span><br><span class="line">      flex-wrap:nowrap;  //默认值，不换行。</span><br><span class="line">      flex-wrap:wrap;   //换行，第一行在上方。</span><br><span class="line">      flex-wrap:wrap-reverse;  //换行，第一行在下方。</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="flex-flow"><a href="#flex-flow" class="headerlink" title="flex-flow"></a>flex-flow</h4><p>是flex-direction属性和flex-wrap属性的简写形式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">      <span class="attribute">display</span>:flex;</span><br><span class="line">      flex-flow:row nowrap;  //默认值，不换行。</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="justify-content"><a href="#justify-content" class="headerlink" title="justify-content"></a>justify-content</h4><p>属性定义了项目在主轴上的对齐方式。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">      <span class="attribute">display</span>:flex;</span><br><span class="line">      justify-content:flex-start;  //默认值，左对齐。</span><br><span class="line">      justify-content:flex-end;  //右对齐。</span><br><span class="line">      justify-content:center;  //水平居中。     </span><br><span class="line">      justify-content:space-between;  //两队对齐，项目之间间隔相等。      </span><br><span class="line">      justify-content:space-around;  //每个项目两侧间隔相等。</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="align-items"><a href="#align-items" class="headerlink" title="align-items"></a>align-items</h4><p>属性定义项目在交叉轴上如何对齐。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">      <span class="attribute">display</span>:flex;</span><br><span class="line">      align-items:flex-start;  //交叉轴的起点对齐。</span><br><span class="line">      align-items:flex-end;  //交叉轴的终点对齐。</span><br><span class="line">      align-items:center;  //垂直居中，交叉轴的中点对齐。     </span><br><span class="line">      align-items:baseline;  //项目第一行文字的基线对齐。      </span><br><span class="line">      align-items:stretch; //默认值，项目未设置高度或设为auto，将占满整个容器的高度。</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="align-content"><a href="#align-content" class="headerlink" title="align-content"></a>align-content</h4><p>属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">      <span class="attribute">display</span>:flex;</span><br><span class="line">      align-content:flex-start;  //与交叉轴的起点对齐。</span><br><span class="line">      align-content:flex-end;  //与交叉轴的终点对齐。</span><br><span class="line">      align-content:center;  //与交叉轴的中点对齐。     </span><br><span class="line">      align-content:space-between;  //与交叉轴两端对齐，轴线之间间隔平均分布。    </span><br><span class="line">      align-content:space-between;  //每根轴线两侧间隔相等。  </span><br><span class="line">      align-content:stretch; //默认值，轴线占满交叉轴。</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="容器内元素6个属性"><a href="#容器内元素6个属性" class="headerlink" title="容器内元素6个属性"></a>容器内元素6个属性</h5><p>flex-grow定义元素的放大比例，默认为0，即如果存在剩余空间，也不放大。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">   <span class="selector-class">.box</span><span class="selector-class">.item</span>&#123;</span><br><span class="line">     flex-grow:number(数字);    //默认为0</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>flex-shrink定义元素的缩小比例，默认为1，即如果空间不足，该项目将缩小。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span>&#123;</span><br><span class="line">     flex-shrink:number(数字);    //默认为0</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span>&#123;</span><br><span class="line">      <span class="attribute">flex-basis</span>:length | auto;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>align-self允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span>&#123;</span><br><span class="line">      <span class="attribute">align-self</span>:auto;</span><br><span class="line">      <span class="attribute">align-self</span>:flex-start;</span><br><span class="line">      <span class="attribute">align-self</span>:flex-end;</span><br><span class="line">      <span class="attribute">align-self</span>:center;</span><br><span class="line">      <span class="attribute">align-self</span>:baseline;</span><br><span class="line">      <span class="attribute">align-self</span>:stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://tvax1.sinaimg.cn/large/007aXOcdly1gqml36a524j31300m80u9.jpg" alt="弹性布局复习思维导图.PNG"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;flex是Flexible Box的缩写，意思为“弹性布局”，在使用过程中简单、易用、代码较少，在制作网页的时候经常使用这种方法来进行布局。&lt;/p&gt;
&lt;p&gt;容器设置为flex以后，子元素的float、clear和vertcal-align的属性将失效。&lt;/p&gt;
&lt;figur</summary>
      
    
    
    
    <category term="css" scheme="http://example.com/categories/css/"/>
    
    
    <category term="css" scheme="http://example.com/tags/css/"/>
    
    <category term="布局" scheme="http://example.com/tags/%E5%B8%83%E5%B1%80/"/>
    
  </entry>
  
</feed>
